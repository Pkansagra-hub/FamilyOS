openapi: 3.1.0
info:
  title: MemoryOS Family Intelligence Traces Specification
  description: |
    **Family Intelligence Traces Specification Contract**

    This contract defines the comprehensive distributed tracing specification for
    the Memory-Centric Family AI system, providing standardized span names,
    attributes, family context propagation, and cognitive trace correlation
    across API→PEP→Pipelines→Storage flows.

    **Family Intelligence Traces Architecture:**
    - **Memory Backbone Trace Core**: Trace coordination through family memory
    - **Family Context Trace Enhancement**: Traces enriched with family relationships
    - **Cross-Device Trace Correlation**: Traces correlated across family devices
    - **Cognitive Trace Integration**: Traces linked to cognitive processing flows
    - **Family Intelligence Trace Analytics**: Intelligence system trace analysis

    **Trace Categories (Platform Coverage):**
    1. **Memory Backbone Traces**: Memory operations, storage, retrieval spans
    2. **Family Intelligence Traces**: Cognitive pipeline tracing, processing flows
    3. **API Plane Traces**: Agents, App, Control plane request/response spans
    4. **Event Bus Traces**: Event processing, routing, delivery spans
    5. **Storage Traces**: Database operations, consistency, durability spans
    6. **Family Coordination Traces**: Cross-device sync, relationship processing
    7. **Security & Privacy Traces**: Policy enforcement, encryption operation spans
    8. **Learning & Adaptation Traces**: Learning loop tracing, model update spans
    9. **Real-time Processing Traces**: Sub-second cognitive processing spans

    **Family Context Integration:**
    - All spans include family_id for family-scoped trace correlation
    - Relationship-aware span attribution across family members
    - Emotional context preservation in trace attributes
    - Cross-device span synchronization through family memory
    - Age-appropriate trace visibility based on family member profiles

    **Memory-Centric Traces Principles:**
    - All traces enhance and leverage family memory backbone
    - Trace correlation contributes to family intelligence optimization
    - Span relationships leverage family relationship dynamics
    - Observability considers family context and individual member needs
    - Trace outcomes enhance family coordination and system debugging
  version: "1.0.0"
  contact:
    name: MemoryOS Observability Platform Team
    url: https://familyos.local/support/observability
    email: observability-support@familyos.local
  license:
    name: Family OS Private License
    url: https://familyos.local/licenses/family-os

servers:
  - url: https://traces.familyos.local/v1
    description: Production Family Intelligence Traces Service
  - url: https://staging-traces.familyos.local/v1
    description: Staging Environment
  - url: http://localhost:8088/traces/v1
    description: Local Development

security:
  - FamilyOSAuth: []
  - TracesAuth: []

paths:
  /traces/specification:
    get:
      summary: Get Family Intelligence Traces Specification
      description: |
        Retrieve comprehensive family intelligence traces specification
        including span definitions, attribute schemas, and family context.
      operationId: getFamilyTracesSpecification
      parameters:
        - name: category
          in: query
          schema:
            type: string
            enum: [memory_backbone, family_intelligence, api_planes, event_bus, storage, coordination, security, learning, realtime]
        - name: family_scoped
          in: query
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Family traces specification retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyTracesSpecification'

  /traces/cognitive-flows:
    get:
      summary: Get Cognitive Flow Traces
      description: |
        Retrieve cognitive flow traces showing family-wide cognitive processing
        spans and cross-device coordination for family intelligence analysis.
      operationId: getCognitiveFlowTraces
      parameters:
        - name: family_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: cognitive_trace_id
          in: query
          schema:
            type: string
            format: uuid
        - name: pipeline
          in: query
          schema:
            type: string
            enum: [P01, P02, P03, P04, P05, P06, P07, P08, P09, P10, P11, P12, P13, P14, P15, P16, P17, P18, P19, P20]
        - name: time_range
          in: query
          schema:
            type: string
            enum: [1h, 6h, 24h, 7d, 30d]
            default: 1h
      responses:
        '200':
          description: Cognitive flow traces retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CognitiveFlowTraces'

  /traces/memory-backbone:
    get:
      summary: Get Memory Backbone Traces
      description: |
        Retrieve memory backbone operation traces with family context
        and cross-device correlation for family memory optimization.
      operationId: getMemoryBackboneTraces
      parameters:
        - name: family_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: operation_type
          in: query
          schema:
            type: string
            enum: [store, retrieve, sync, consolidate, cleanup]
        - name: time_range
          in: query
          schema:
            type: string
            enum: [1h, 6h, 24h, 7d, 30d]
            default: 1h
      responses:
        '200':
          description: Memory backbone traces retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemoryBackboneTraces'

  /traces/api-flows:
    get:
      summary: Get API Flow Traces
      description: |
        Retrieve API flow traces across Agents, App, and Control planes
        with family context and relationship-aware span correlation.
      operationId: getAPIFlowTraces
      parameters:
        - name: plane
          in: query
          required: true
          schema:
            type: string
            enum: [agents, app, control]
        - name: family_id
          in: query
          schema:
            type: string
            format: uuid
        - name: endpoint_pattern
          in: query
          schema:
            type: string
        - name: time_range
          in: query
          schema:
            type: string
            enum: [1h, 6h, 24h, 7d, 30d]
            default: 1h
      responses:
        '200':
          description: API flow traces retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIFlowTraces'

  /traces/family-coordination:
    get:
      summary: Get Family Coordination Traces
      description: |
        Retrieve family coordination traces showing cross-device sync,
        relationship processing, and family intelligence coordination spans.
      operationId: getFamilyCoordinationTraces
      parameters:
        - name: family_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: coordination_type
          in: query
          schema:
            type: string
            enum: [sync, relationship_processing, intelligence_coordination, emotional_coordination]
        - name: include_cross_device
          in: query
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Family coordination traces retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyCoordinationTraces'

  /traces/search:
    post:
      summary: Search Family Intelligence Traces
      description: |
        Search family intelligence traces with complex filters,
        family context queries, and cognitive trace correlation.
      operationId: searchFamilyTraces
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TraceSearchRequest'
      responses:
        '200':
          description: Family traces search completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TraceSearchResponse'

  /traces/family/{familyId}/analytics:
    get:
      summary: Get Family Trace Analytics
      description: |
        Retrieve comprehensive family trace analytics including
        performance patterns, bottlenecks, and optimization insights.
      operationId: getFamilyTraceAnalytics
      parameters:
        - name: familyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: analysis_type
          in: query
          schema:
            type: string
            enum: [performance, bottlenecks, patterns, optimization]
            default: performance
        - name: time_range
          in: query
          schema:
            type: string
            enum: [1h, 6h, 24h, 7d, 30d]
            default: 24h
      responses:
        '200':
          description: Family trace analytics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyTraceAnalytics'

  /traces/sampling/rules:
    get:
      summary: Get Family Trace Sampling Rules
      description: |
        Retrieve family trace sampling rules with family context
        and relationship-aware sampling strategies.
      operationId: getFamilyTraceSamplingRules
      parameters:
        - name: family_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: rule_type
          in: query
          schema:
            type: string
            enum: [head_based, tail_based, probabilistic, adaptive]
      responses:
        '200':
          description: Family trace sampling rules retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyTraceSamplingRules'

    post:
      summary: Create Family Trace Sampling Rule
      description: |
        Create new family trace sampling rule with family context
        and relationship-aware sampling configuration.
      operationId: createFamilyTraceSamplingRule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFamilySamplingRuleRequest'
      responses:
        '201':
          description: Family trace sampling rule created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilySamplingRuleResponse'

components:
  schemas:
    FamilyTracesSpecification:
      type: object
      required:
        - specification_version
        - span_categories
      properties:
        specification_version:
          type: string
        span_categories:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SpanCategory'
        family_context_requirements:
          $ref: '#/components/schemas/FamilyContextRequirements'
        attribute_standards:
          $ref: '#/components/schemas/AttributeStandards'
        sampling_guidelines:
          $ref: '#/components/schemas/SamplingGuidelines'

    SpanCategory:
      type: object
      required:
        - category_name
        - span_definitions
      properties:
        category_name:
          type: string
        description:
          type: string
        span_definitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SpanDefinition'
        family_scoped:
          type: boolean
        cognitive_integrated:
          type: boolean

    SpanDefinition:
      type: object
      required:
        - span_name
        - operation_name
      properties:
        span_name:
          type: string
          pattern: '^familyos\.[a-z_]+\.[a-z_]+$'
        operation_name:
          type: string
        description:
          type: string
        required_attributes:
          type: array
          items:
            $ref: '#/components/schemas/SpanAttribute'
        optional_attributes:
          type: array
          items:
            $ref: '#/components/schemas/SpanAttribute'
        family_context_required:
          type: boolean
        cognitive_trace_correlation:
          type: boolean

    CognitiveFlowTraces:
      type: object
      required:
        - family_id
        - cognitive_spans
        - flow_correlation
      properties:
        family_id:
          type: string
          format: uuid
        cognitive_spans:
          type: array
          items:
            $ref: '#/components/schemas/CognitiveSpan'
        flow_correlation:
          $ref: '#/components/schemas/FlowCorrelation'
        pipeline_performance:
          $ref: '#/components/schemas/PipelinePerformance'
        family_coordination:
          $ref: '#/components/schemas/FamilyCoordinationContext'

    MemoryBackboneTraces:
      type: object
      required:
        - family_id
        - memory_spans
        - operation_correlation
      properties:
        family_id:
          type: string
          format: uuid
        memory_spans:
          type: array
          items:
            $ref: '#/components/schemas/MemorySpan'
        operation_correlation:
          $ref: '#/components/schemas/OperationCorrelation'
        storage_performance:
          $ref: '#/components/schemas/StoragePerformance'
        cross_device_sync:
          $ref: '#/components/schemas/CrossDeviceSyncContext'

    APIFlowTraces:
      type: object
      required:
        - plane_name
        - api_spans
        - request_correlation
      properties:
        plane_name:
          type: string
          enum: [agents, app, control]
        api_spans:
          type: array
          items:
            $ref: '#/components/schemas/APISpan'
        request_correlation:
          $ref: '#/components/schemas/RequestCorrelation'
        family_context:
          $ref: '#/components/schemas/FamilyContextTrace'
        performance_metrics:
          $ref: '#/components/schemas/APIPerformanceMetrics'

    TraceSearchRequest:
      type: object
      required:
        - search_criteria
      properties:
        search_criteria:
          $ref: '#/components/schemas/TraceSearchCriteria'
        family_context:
          $ref: '#/components/schemas/FamilyContext'
        time_range:
          $ref: '#/components/schemas/TimeRange'
        result_limit:
          type: integer
          minimum: 1
          maximum: 1000
          default: 100

    TraceSearchResponse:
      type: object
      required:
        - traces
        - total_count
      properties:
        traces:
          type: array
          items:
            $ref: '#/components/schemas/TraceResult'
        total_count:
          type: integer
        search_metadata:
          $ref: '#/components/schemas/SearchMetadata'
        family_insights:
          type: array
          items:
            $ref: '#/components/schemas/FamilyTraceInsight'

    FamilyTraceAnalytics:
      type: object
      required:
        - family_id
        - analytics_summary
      properties:
        family_id:
          type: string
          format: uuid
        analytics_summary:
          $ref: '#/components/schemas/TraceAnalyticsSummary'
        performance_patterns:
          type: array
          items:
            $ref: '#/components/schemas/PerformancePattern'
        bottleneck_analysis:
          $ref: '#/components/schemas/BottleneckAnalysis'
        optimization_recommendations:
          type: array
          items:
            $ref: '#/components/schemas/OptimizationRecommendation'

    CreateFamilySamplingRuleRequest:
      type: object
      required:
        - rule_name
        - family_context
        - sampling_strategy
      properties:
        rule_name:
          type: string
        family_context:
          $ref: '#/components/schemas/FamilyContext'
        sampling_strategy:
          $ref: '#/components/schemas/SamplingStrategy'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/SamplingCondition'

    FamilySamplingRuleResponse:
      type: object
      required:
        - rule_id
        - rule_name
        - status
      properties:
        rule_id:
          type: string
          format: uuid
        rule_name:
          type: string
        status:
          type: string
          enum: [active, inactive, error]
        family_context:
          $ref: '#/components/schemas/FamilyContext'
        sampling_rate:
          type: number
          minimum: 0
          maximum: 1

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object
          additionalProperties: true

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    FamilyOSAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.familyos.local/oauth/authorize
          tokenUrl: https://auth.familyos.local/oauth/token
          scopes:
            traces:read: Read traces information
            traces:manage: Manage traces configuration
            family:traces: Access family-wide traces capabilities

    TracesAuth:
      type: http
      scheme: bearer
      description: Traces service authentication
