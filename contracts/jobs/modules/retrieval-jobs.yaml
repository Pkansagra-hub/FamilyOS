jobs:
  cache_maintenance:
    schedule: "*/5 * * * *"  # Every 5 minutes
    description: "Clean expired cache entries and enforce size limits"
    actions:
      - "delete_expired_cache_entries"
      - "enforce_cache_size_limits"
      - "update_cache_statistics"
    inputs: ["cache_entry"]
    outputs: ["cache_statistics"]
    backoff:
      initial_ms: 500
      factor: 2
      max_ms: 30000
    sla:
      p95_ms: 250
      max_duration_ms: 30000
    metrics:
      - "cache_cleanup_duration_ms"
      - "cache_entries_evicted_total"
      - "cache_size_after_cleanup_mb"

  query_log_rotation:
    schedule: "0 2 * * *"  # Daily at 2 AM
    description: "Archive old query logs and enforce retention policies"
    actions:
      - "archive_old_query_logs"
      - "enforce_retention_policies"
      - "generate_usage_reports"
    inputs: ["query_log"]
    outputs: ["query_statistics", "usage_reports"]
    backoff:
      initial_ms: 1000
      factor: 2
      max_ms: 60000
    sla:
      p95_ms: 5000
      max_duration_ms: 300000
    metrics:
      - "log_rotation_duration_ms"
      - "logs_archived_total"
      - "storage_freed_mb"

  cache_warmup:
    schedule: "0 6 * * *"  # Daily at 6 AM
    description: "Pre-populate cache with frequently accessed queries"
    actions:
      - "identify_frequent_queries"
      - "pre_compute_results"
      - "update_cache_warmup_stats"
    inputs: ["query_log", "cache_statistics"]
    outputs: ["cache_entry"]
    enabled: true
    backoff:
      initial_ms: 2000
      factor: 1.5
      max_ms: 60000
    sla:
      p95_ms: 10000
    metrics:
      - "cache_warmup_duration_ms"
      - "queries_precomputed_total"
      - "warmup_hit_ratio"

  health_monitoring:
    schedule: "*/1 * * * *"  # Every minute
    description: "Monitor retrieval system health and performance"
    actions:
      - "check_cache_health"
      - "monitor_query_latencies"
      - "update_system_metrics"
    inputs: ["cache_entry", "query_log"]
    outputs: ["health_metrics"]
    backoff:
      initial_ms: 100
      factor: 2
      max_ms: 5000
    sla:
      p95_ms: 50
    metrics:
      - "health_check_duration_ms"
      - "system_health_score"

  security_audit:
    schedule: "0 */6 * * *"  # Every 6 hours
    description: "Audit security compliance and detect anomalies"
    actions:
      - "audit_access_patterns"
      - "detect_suspicious_queries"
      - "validate_policy_compliance"
    inputs: ["query_log"]
    outputs: ["security_alerts", "audit_reports"]
    backoff:
      initial_ms: 2000
      factor: 2
      max_ms: 120000
    sla:
      p95_ms: 15000
    metrics:
      - "security_audit_duration_ms"
      - "anomalies_detected_total"
      - "policy_violations_total"

job_dependencies:
  - job: "cache_warmup"
    depends_on: ["cache_maintenance"]
    delay_ms: 300000  # 5 minutes after maintenance

  - job: "query_log_rotation"
    depends_on: ["security_audit"]
    condition: "security_audit.status == 'success'"

error_handling:
  retry_policy: "exponential_backoff"
  max_failures_per_hour: 3
  alert_on_failure: true
  fallback_actions:
    - "disable_non_critical_jobs"
    - "alert_operations_team"

resource_limits:
  max_concurrent_jobs: 2
  memory_limit_mb: 512
  cpu_limit_percent: 25
  disk_io_limit_mbps: 50
