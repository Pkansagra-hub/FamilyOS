# Retrieval Service Deployment Contracts
# Defines comprehensive deployment, infrastructure, and environment specifications
# Version: 2.0.0 - Complete deployment operational excellence

metadata:
  version: "2.0.0"
  title: "Retrieval Service Deployment Contracts"
  description: "Comprehensive deployment and infrastructure specifications"
  created: "2025-09-16"
  contract_type: "deployment_specification"

# =============================================================================
# Environment Specifications
# =============================================================================

environments:
  development:
    description: "Development environment for feature development"
    infrastructure:
      compute:
        instances: 1
        cpu: "2 cores"
        memory: "4GB"
        storage: "50GB SSD"

      networking:
        load_balancer: false
        ssl_termination: false
        internal_only: true

      databases:
        postgres:
          instance_type: "small"
          storage: "10GB"
          backup_retention: "P3D"

        elasticsearch:
          nodes: 1
          heap_size: "1GB"
          storage: "20GB"

      monitoring:
        metrics_retention: "P7D"
        log_retention: "P3D"
        tracing_sampling: 1.0

    configuration:
      log_level: "DEBUG"
      feature_flags:
        experimental_features: true
        debug_endpoints: true

  staging:
    description: "Staging environment for integration testing"
    infrastructure:
      compute:
        instances: 2
        cpu: "4 cores"
        memory: "8GB"
        storage: "100GB SSD"

      networking:
        load_balancer: true
        ssl_termination: true
        cdn: false

      databases:
        postgres:
          instance_type: "medium"
          storage: "50GB"
          backup_retention: "P7D"
          read_replicas: 1

        elasticsearch:
          nodes: 2
          heap_size: "2GB"
          storage: "100GB"

      monitoring:
        metrics_retention: "P14D"
        log_retention: "P7D"
        tracing_sampling: 0.5

    configuration:
      log_level: "INFO"
      feature_flags:
        experimental_features: false
        debug_endpoints: true

  production:
    description: "Production environment for live traffic"
    infrastructure:
      compute:
        instances: 6
        cpu: "8 cores"
        memory: "16GB"
        storage: "200GB SSD"
        auto_scaling:
          min_instances: 3
          max_instances: 20
          target_cpu: "70%"

      networking:
        load_balancer: true
        ssl_termination: true
        cdn: true
        waf: true

      databases:
        postgres:
          instance_type: "large"
          storage: "500GB"
          backup_retention: "P30D"
          read_replicas: 3
          multi_az: true

        elasticsearch:
          nodes: 6
          heap_size: "8GB"
          storage: "1TB"
          cluster_redundancy: 2

      monitoring:
        metrics_retention: "P365D"
        log_retention: "P90D"
        tracing_sampling: 0.1
        alerting: true

    configuration:
      log_level: "WARN"
      feature_flags:
        experimental_features: false
        debug_endpoints: false

# =============================================================================
# Deployment Strategies
# =============================================================================

deployment_strategies:
  blue_green:
    description: "Blue-green deployment for zero-downtime updates"
    environments: ["production"]

    process:
      pre_deployment:
        - "run_unit_tests"
        - "run_integration_tests"
        - "security_scan"
        - "performance_baseline"

      deployment:
        - "deploy_to_green_environment"
        - "warm_up_services"
        - "run_smoke_tests"
        - "validate_health_checks"

      traffic_switching:
        strategy: "instant"
        validation_period: "PT10M"
        rollback_trigger: "error_rate > 0.1%"

      post_deployment:
        - "monitor_metrics"
        - "validate_sla_compliance"
        - "cleanup_blue_environment"

    rollback:
      trigger_conditions:
        - "error_rate > 0.5%"
        - "p95_latency > 200ms"
        - "health_check_failures > 20%"
      rollback_time: "PT2M"

  rolling_update:
    description: "Rolling update for gradual deployment"
    environments: ["staging", "development"]

    process:
      batch_size: "25%"
      delay_between_batches: "PT5M"
      health_check_grace_period: "PT2M"

    rollback:
      automatic: true
      trigger_conditions:
        - "health_check_failures > 50%"
        - "error_rate > 1%"

  canary:
    description: "Canary deployment for risk mitigation"
    environments: ["production"]

    process:
      traffic_split:
        initial: "5%"
        increments: ["10%", "25%", "50%", "100%"]
        duration_per_stage: "PT30M"

      success_criteria:
        - "error_rate < 0.1%"
        - "p95_latency < 120ms"
        - "user_satisfaction > 95%"

      monitoring_period: "PT2H"

# =============================================================================
# Infrastructure as Code
# =============================================================================

infrastructure_as_code:
  terraform:
    version: ">=1.0"
    state_backend: "s3"
    modules:
      - "compute"
      - "networking"
      - "databases"
      - "monitoring"
      - "security"

    validation:
      terraform_fmt: true
      terraform_validate: true
      tflint: true
      checkov: true

  kubernetes:
    version: ">=1.24"
    manifests:
      - "deployment.yaml"
      - "service.yaml"
      - "ingress.yaml"
      - "configmap.yaml"
      - "secret.yaml"
      - "hpa.yaml"

    validation:
      kubeval: true
      kube_score: true
      polaris: true

# =============================================================================
# Configuration Management
# =============================================================================

configuration_management:
  configuration_sources:
    environment_variables:
      precedence: 1
      validation: "runtime"

    config_files:
      precedence: 2
      format: "yaml"
      validation: "schema"

    external_config_service:
      precedence: 3
      provider: "consul"
      encryption: true

    default_values:
      precedence: 4
      source: "application_code"

  configuration_schema:
    server:
      port:
        type: "integer"
        default: 8080
        validation: "1024-65535"

      host:
        type: "string"
        default: "0.0.0.0"

    database:
      url:
        type: "string"
        required: true
        sensitive: true

      pool_size:
        type: "integer"
        default: 10
        validation: "1-100"

    cache:
      redis_url:
        type: "string"
        required: true
        sensitive: true

      ttl_seconds:
        type: "integer"
        default: 300
        validation: "60-3600"

    security:
      jwt_secret:
        type: "string"
        required: true
        sensitive: true
        generated: true

      clearance_levels:
        type: "array"
        default: [1, 2, 3, 4]
        validation: "integer_array"

  secret_management:
    provider: "vault"
    rotation_policy:
      database_credentials: "P30D"
      api_keys: "P90D"
      certificates: "P365D"

    encryption:
      at_rest: "AES-256"
      in_transit: "TLS-1.3"

# =============================================================================
# Container Specifications
# =============================================================================

container_specifications:
  base_image:
    name: "familyos/python-runtime"
    version: "3.11-slim"
    security_scanning: true
    vulnerability_threshold: "medium"

  application_image:
    build_process:
      dockerfile: "Dockerfile"
      build_args:
        - "PYTHON_VERSION=3.11"
        - "APP_VERSION=${BUILD_VERSION}"

      optimization:
        multi_stage_build: true
        layer_caching: true
        image_compression: true

    runtime_configuration:
      user: "app"
      working_directory: "/app"
      exposed_ports: [8080, 8081]

      resource_limits:
        cpu: "1000m"
        memory: "2Gi"
        ephemeral_storage: "1Gi"

      resource_requests:
        cpu: "100m"
        memory: "512Mi"
        ephemeral_storage: "100Mi"

      environment_variables:
        LOG_LEVEL: "INFO"
        PYTHONUNBUFFERED: "1"
        PYTHONDONTWRITEBYTECODE: "1"

      health_checks:
        liveness_probe:
          path: "/live"
          port: 8081
          initial_delay: 30
          period: 10
          timeout: 5
          failure_threshold: 3

        readiness_probe:
          path: "/ready"
          port: 8081
          initial_delay: 5
          period: 5
          timeout: 3
          failure_threshold: 3

    security_configuration:
      run_as_non_root: true
      read_only_root_filesystem: true
      allow_privilege_escalation: false
      capabilities:
        drop: ["ALL"]

# =============================================================================
# CI/CD Pipeline
# =============================================================================

ci_cd_pipeline:
  triggers:
    pull_request:
      actions: ["test", "lint", "security_scan"]

    main_branch:
      actions: ["test", "build", "deploy_dev", "integration_test"]

    release_tag:
      actions:
        ["test", "build", "deploy_staging", "e2e_test", "deploy_production"]

  stages:
    test:
      unit_tests:
        tool: "pytest"
        coverage_threshold: 90
        parallel: true

      integration_tests:
        tool: "pytest"
        environment: "test"
        database: "postgres_test"

      contract_tests:
        tool: "pact"
        consumer_tests: true
        provider_tests: true

    quality_assurance:
      code_quality:
        sonarqube:
          quality_gate: "passing"
          coverage_threshold: 90
          duplication_threshold: 3

      security_scanning:
        sast:
          tool: "semgrep"
          severity_threshold: "medium"

        dependency_scanning:
          tool: "safety"
          severity_threshold: "medium"

        container_scanning:
          tool: "trivy"
          severity_threshold: "high"

    build:
      container_build:
        registry: "familyos.registry.com"
        tagging_strategy: "git_commit_sha"
        signing: true

      artifact_storage:
        retention: "P90D"
        immutable: true

    deployment:
      approval_gates:
        staging:
          required: false
          approvers: ["team_lead"]

        production:
          required: true
          approvers: ["service_owner", "security_team"]

      deployment_validation:
        health_checks: true
        smoke_tests: true
        performance_validation: true

# =============================================================================
# Disaster Recovery
# =============================================================================

disaster_recovery:
  backup_strategy:
    databases:
      frequency: "PT4H"
      retention: "P30D"
      encryption: true
      cross_region: true

    configuration:
      frequency: "daily"
      retention: "P90D"
      versioning: true

    application_data:
      frequency: "daily"
      retention: "P365D"
      incremental: true

  recovery_procedures:
    database_recovery:
      rto: "PT15M"
      rpo: "PT4H"
      procedure:
        - "identify_latest_backup"
        - "restore_from_backup"
        - "verify_data_integrity"
        - "update_dns_records"

    service_recovery:
      rto: "PT10M"
      rpo: "PT0S"
      procedure:
        - "deploy_to_backup_region"
        - "update_load_balancer"
        - "verify_service_health"
        - "communicate_to_stakeholders"

  testing:
    frequency: "monthly"
    scope: "full_disaster_simulation"
    success_criteria:
      - "rto_achieved"
      - "rpo_achieved"
      - "data_integrity_verified"
      - "service_functionality_restored"

# =============================================================================
# Compliance and Governance
# =============================================================================

compliance:
  security_standards:
    - "SOC2_TYPE_II"
    - "ISO_27001"
    - "GDPR"
    - "CCPA"

  audit_requirements:
    access_logging:
      retention: "P7Y"
      immutability: true

    change_tracking:
      deployment_logs: "P3Y"
      configuration_changes: "P3Y"

    compliance_reporting:
      frequency: "quarterly"
      automated: true

  governance:
    change_approval:
      production_changes:
        required_approvals: 2
        approver_roles: ["service_owner", "security_team"]

      infrastructure_changes:
        required_approvals: 3
        approver_roles: ["infrastructure_team", "security_team", "compliance"]

    documentation:
      architecture_decisions: "required"
      runbooks: "required"
      incident_reports: "required"
