openapi: 3.1.0
info:
  title: MemoryOS Control Plane - Family Management API
  description: |
    **Memory-Centric Family AI Family Management Operations**

    This API provides family administrators with comprehensive family management capabilities:
    - **Family Structure Management**: Manage family structure, hierarchy, and member relationships
    - **Family Policy Administration**: Configure and enforce family policies, permissions, and access controls
    - **Family Coordination Management**: Coordinate family activities, schedules, and collaborative operations
    - **Family Resource Management**: Manage family resources, allocations, and optimization strategies
    - **Family Governance**: Establish and maintain family governance structures and decision-making processes

    **Memory-Centric Design**: Family management leverages Memory Backbone for:
    - Family structure understanding through memory-driven family organization and relationship management
    - Memory-informed family administration with historical family pattern recognition and governance intelligence
    - Cross-family coordination intelligence with family memory synthesis and collaborative optimization
    - Family policy enforcement through memory-aware access control and family boundary management

    **Architecture Integration**:
    - Integrates with Memory Backbone for memory-informed family management and administrative intelligence
    - Leverages Family Intelligence for relationship-aware administration and family coordination optimization
    - Coordinates with Intelligence Layer for advanced family governance and administrative decision-making
    - Enforces family policies through comprehensive access control and family boundary management
  version: "1.0.0"
  contact:
    name: MemoryOS API Team
    url: https://familyos.local/support
    email: api-support@familyos.local
  license:
    name: Family OS Private License
    url: https://familyos.local/licenses/family-os

servers:
  - url: https://api.familyos.local/control/v1
    description: Production Control Plane
  - url: https://staging-api.familyos.local/control/v1
    description: Staging Environment
  - url: http://localhost:8080/control/v1
    description: Local Development

security:
  - FamilyAdminAuth: []
  - FamilyOSAuth: []

paths:
  /family/structure:
    get:
      summary: Get Family Structure
      description: |
        Retrieve comprehensive family structure including hierarchy, relationships, and member details.

        **Family Structure Retrieval**: Get complete family organizational structure and relationship mapping.
        **Administrative Intelligence**: Retrieve family structure with administrative context and management insights.
      operationId: getFamilyStructure
      parameters:
        - name: include_extended
          in: query
          description: Include extended family members in structure
          required: false
          schema:
            type: boolean
            default: false
        - name: include_relationships
          in: query
          description: Include detailed relationship mappings
          required: false
          schema:
            type: boolean
            default: true
        - name: structure_depth
          in: query
          description: Depth of family structure to retrieve
          required: false
          schema:
            type: string
            enum: [immediate, extended, comprehensive]
            default: immediate
      responses:
        '200':
          description: Family structure retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  family_structure:
                    $ref: '#/components/schemas/FamilyStructure'
                  family_hierarchy:
                    $ref: '#/components/schemas/FamilyHierarchy'
                  relationship_map:
                    $ref: '#/components/schemas/FamilyRelationshipMap'
                  structure_metadata:
                    $ref: '#/components/schemas/StructureMetadata'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Family Structure

    post:
      summary: Create Family Structure
      description: |
        Create new family structure with hierarchy and initial member configuration.

        **Family Structure Creation**: Establish new family organizational structure and hierarchy.
        **Administrative Setup**: Initialize family structure with administrative configuration and governance setup.
      operationId: createFamilyStructure
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFamilyStructureRequest'
      responses:
        '201':
          description: Family structure created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  family_id:
                    type: string
                    format: uuid
                  family_structure:
                    $ref: '#/components/schemas/FamilyStructure'
                  setup_status:
                    $ref: '#/components/schemas/FamilySetupStatus'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Family Structure

    put:
      summary: Update Family Structure
      description: |
        Update existing family structure including hierarchy modifications and relationship changes.

        **Family Structure Update**: Modify family organizational structure and relationship configurations.
        **Administrative Management**: Update family structure with administrative oversight and governance controls.
      operationId: updateFamilyStructure
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFamilyStructureRequest'
      responses:
        '200':
          description: Family structure updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  family_structure:
                    $ref: '#/components/schemas/FamilyStructure'
                  update_status:
                    $ref: '#/components/schemas/UpdateStatus'
                  validation_results:
                    $ref: '#/components/schemas/StructureValidationResults'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Family Structure

  /family/members:
    get:
      summary: Get Family Members
      description: |
        Retrieve comprehensive list of family members with roles, permissions, and status information.

        **Member Management**: Get complete family member roster with administrative details.
        **Administrative Overview**: Retrieve family members with management context and administrative insights.
      operationId: getFamilyMembers
      parameters:
        - name: include_inactive
          in: query
          description: Include inactive family members
          required: false
          schema:
            type: boolean
            default: false
        - name: role_filter
          in: query
          description: Filter members by role
          required: false
          schema:
            type: array
            items:
              type: string
        - name: status_filter
          in: query
          description: Filter members by status
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [active, inactive, pending, suspended]
      responses:
        '200':
          description: Family members retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  family_members:
                    type: array
                    items:
                      $ref: '#/components/schemas/FamilyMember'
                  member_statistics:
                    $ref: '#/components/schemas/FamilyMemberStatistics'
                  role_distribution:
                    $ref: '#/components/schemas/RoleDistribution'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Family Members

    post:
      summary: Add Family Member
      description: |
        Add new family member to the family structure with role assignment and permission configuration.

        **Member Addition**: Add new family member with administrative setup and role configuration.
        **Administrative Onboarding**: Onboard new family member with governance and policy assignment.
      operationId: addFamilyMember
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFamilyMemberRequest'
      responses:
        '201':
          description: Family member added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  member_id:
                    type: string
                    format: uuid
                  family_member:
                    $ref: '#/components/schemas/FamilyMember'
                  onboarding_status:
                    $ref: '#/components/schemas/OnboardingStatus'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Family Members

  /family/members/{member_id}:
    get:
      summary: Get Family Member Details
      description: |
        Retrieve detailed information about a specific family member including roles, permissions, and activity.

        **Member Details**: Get comprehensive family member information with administrative context.
        **Administrative Profile**: Retrieve family member profile with management insights and governance details.
      operationId: getFamilyMemberDetails
      parameters:
        - name: member_id
          in: path
          description: Unique identifier of the family member
          required: true
          schema:
            type: string
            format: uuid
        - name: include_activity
          in: query
          description: Include recent activity information
          required: false
          schema:
            type: boolean
            default: false
        - name: include_permissions
          in: query
          description: Include detailed permission information
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Family member details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  family_member:
                    $ref: '#/components/schemas/DetailedFamilyMember'
                  member_activity:
                    $ref: '#/components/schemas/MemberActivity'
                  member_permissions:
                    $ref: '#/components/schemas/MemberPermissions'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Family Members

    put:
      summary: Update Family Member
      description: |
        Update family member information including roles, permissions, and status changes.

        **Member Update**: Modify family member configuration with administrative oversight.
        **Administrative Management**: Update family member with governance controls and policy enforcement.
      operationId: updateFamilyMember
      parameters:
        - name: member_id
          in: path
          description: Unique identifier of the family member
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFamilyMemberRequest'
      responses:
        '200':
          description: Family member updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  family_member:
                    $ref: '#/components/schemas/FamilyMember'
                  update_status:
                    $ref: '#/components/schemas/UpdateStatus'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Family Members

    delete:
      summary: Remove Family Member
      description: |
        Remove family member from the family structure with proper data handling and relationship cleanup.

        **Member Removal**: Remove family member with administrative oversight and data management.
        **Administrative Cleanup**: Remove family member with governance controls and policy enforcement.
      operationId: removeFamilyMember
      parameters:
        - name: member_id
          in: path
          description: Unique identifier of the family member
          required: true
          schema:
            type: string
            format: uuid
        - name: removal_type
          in: query
          description: Type of member removal
          required: false
          schema:
            type: string
            enum: [soft_delete, hard_delete, archive]
            default: soft_delete
        - name: data_retention_policy
          in: query
          description: Data retention policy for removed member
          required: false
          schema:
            type: string
            enum: [retain_all, retain_minimal, remove_all]
            default: retain_minimal
      responses:
        '200':
          description: Family member removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  removal_status:
                    $ref: '#/components/schemas/RemovalStatus'
                  data_cleanup_summary:
                    $ref: '#/components/schemas/DataCleanupSummary'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Family Members

  /family/policies:
    get:
      summary: Get Family Policies
      description: |
        Retrieve comprehensive family policies including access controls, permissions, and governance rules.

        **Policy Management**: Get complete family policy configuration with administrative context.
        **Governance Overview**: Retrieve family policies with management insights and enforcement status.
      operationId: getFamilyPolicies
      parameters:
        - name: policy_type
          in: query
          description: Type of policies to retrieve
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [access_control, privacy, security, coordination, resource_management]
        - name: include_inheritance
          in: query
          description: Include policy inheritance information
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Family policies retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  family_policies:
                    $ref: '#/components/schemas/FamilyPolicies'
                  policy_enforcement_status:
                    $ref: '#/components/schemas/PolicyEnforcementStatus'
                  policy_compliance:
                    $ref: '#/components/schemas/PolicyCompliance'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Family Policies

    post:
      summary: Create Family Policy
      description: |
        Create new family policy with enforcement rules and compliance requirements.

        **Policy Creation**: Establish new family policy with administrative configuration.
        **Governance Setup**: Create family policy with enforcement and compliance mechanisms.
      operationId: createFamilyPolicy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFamilyPolicyRequest'
      responses:
        '201':
          description: Family policy created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  policy_id:
                    type: string
                    format: uuid
                  family_policy:
                    $ref: '#/components/schemas/FamilyPolicy'
                  enforcement_status:
                    $ref: '#/components/schemas/PolicyEnforcementStatus'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Family Policies

  /family/governance:
    get:
      summary: Get Family Governance Structure
      description: |
        Retrieve family governance structure including decision-making processes and authority distribution.

        **Governance Management**: Get complete family governance configuration with administrative oversight.
        **Administrative Structure**: Retrieve governance structure with management context and authority mapping.
      operationId: getFamilyGovernanceStructure
      responses:
        '200':
          description: Family governance structure retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  governance_structure:
                    $ref: '#/components/schemas/FamilyGovernanceStructure'
                  decision_making_processes:
                    $ref: '#/components/schemas/DecisionMakingProcesses'
                  authority_distribution:
                    $ref: '#/components/schemas/AuthorityDistribution'
                  governance_effectiveness:
                    $ref: '#/components/schemas/GovernanceEffectiveness'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Family Governance

    post:
      summary: Configure Family Governance
      description: |
        Configure family governance structure with decision-making processes and authority assignments.

        **Governance Configuration**: Establish family governance with administrative setup and authority distribution.
        **Administrative Framework**: Configure governance framework with policy enforcement and decision-making processes.
      operationId: configureFamilyGovernance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureFamilyGovernanceRequest'
      responses:
        '201':
          description: Family governance configured successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  governance_id:
                    type: string
                    format: uuid
                  governance_structure:
                    $ref: '#/components/schemas/FamilyGovernanceStructure'
                  configuration_status:
                    $ref: '#/components/schemas/GovernanceConfigurationStatus'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Family Governance

  /family/coordination:
    get:
      summary: Get Family Coordination Status
      description: |
        Retrieve current family coordination status including activities, schedules, and collaborative operations.

        **Coordination Management**: Get comprehensive family coordination status with administrative oversight.
        **Administrative Coordination**: Retrieve coordination status with management context and operational insights.
      operationId: getFamilyCoordinationStatus
      parameters:
        - name: coordination_scope
          in: query
          description: Scope of coordination information to retrieve
          required: false
          schema:
            type: string
            enum: [current, upcoming, historical, comprehensive]
            default: current
        - name: include_metrics
          in: query
          description: Include coordination performance metrics
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Family coordination status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  coordination_status:
                    $ref: '#/components/schemas/FamilyCoordinationStatus'
                  coordination_activities:
                    type: array
                    items:
                      $ref: '#/components/schemas/CoordinationActivity'
                  coordination_metrics:
                    $ref: '#/components/schemas/CoordinationMetrics'
                  coordination_health:
                    $ref: '#/components/schemas/CoordinationHealth'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Family Coordination

    post:
      summary: Create Coordination Initiative
      description: |
        Create new family coordination initiative with activity planning and resource allocation.

        **Coordination Creation**: Establish new family coordination initiative with administrative setup.
        **Administrative Planning**: Create coordination initiative with governance oversight and resource management.
      operationId: createCoordinationInitiative
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCoordinationInitiativeRequest'
      responses:
        '201':
          description: Coordination initiative created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  initiative_id:
                    type: string
                    format: uuid
                  coordination_initiative:
                    $ref: '#/components/schemas/CoordinationInitiative'
                  initiative_status:
                    $ref: '#/components/schemas/InitiativeStatus'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Family Coordination

  /family/resources:
    get:
      summary: Get Family Resource Overview
      description: |
        Retrieve comprehensive family resource overview including allocations, utilization, and optimization opportunities.

        **Resource Management**: Get complete family resource configuration with administrative oversight.
        **Administrative Resources**: Retrieve resource overview with management context and optimization insights.
      operationId: getFamilyResourceOverview
      parameters:
        - name: resource_types
          in: query
          description: Types of resources to include in overview
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [time, financial, emotional, social, physical, technological]
        - name: include_optimization
          in: query
          description: Include resource optimization recommendations
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Family resource overview retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  resource_overview:
                    $ref: '#/components/schemas/FamilyResourceOverview'
                  resource_allocation:
                    $ref: '#/components/schemas/ResourceAllocation'
                  utilization_metrics:
                    $ref: '#/components/schemas/ResourceUtilizationMetrics'
                  optimization_opportunities:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceOptimizationOpportunity'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Family Resources

    post:
      summary: Configure Resource Management
      description: |
        Configure family resource management including allocation strategies and optimization policies.

        **Resource Configuration**: Establish family resource management with administrative configuration.
        **Administrative Resource Setup**: Configure resource management with governance oversight and optimization strategies.
      operationId: configureFamilyResourceManagement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureResourceManagementRequest'
      responses:
        '201':
          description: Resource management configured successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  configuration_id:
                    type: string
                    format: uuid
                  resource_management:
                    $ref: '#/components/schemas/FamilyResourceManagement'
                  configuration_status:
                    $ref: '#/components/schemas/ResourceConfigurationStatus'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      tags:
        - Family Resources

components:
  securitySchemes:
    FamilyAdminAuth:
      type: http
      scheme: bearer
      description: Family administrator JWT authentication for management operations
      bearerFormat: JWT

    FamilyOSAuth:
      type: oauth2
      description: FamilyOS OAuth2 authentication with family management scopes
      flows:
        authorizationCode:
          authorizationUrl: https://auth.familyos.local/oauth/authorize
          tokenUrl: https://auth.familyos.local/oauth/token
          scopes:
            family:admin: Full family administration access
            family:structure: Manage family structure and hierarchy
            family:members: Manage family members and roles
            family:policies: Manage family policies and governance
            family:coordination: Manage family coordination and activities
            family:resources: Manage family resources and allocation
            family:governance: Configure family governance structure

  schemas:
    FamilyStructure:
      type: object
      description: Comprehensive family structure information
      properties:
        family_id:
          type: string
          format: uuid
        family_name:
          type: string
        family_type:
          type: string
          enum: [nuclear, extended, blended, single_parent, multi_generational]
        structure_version:
          type: string
        created_date:
          type: string
          format: date-time
        last_modified:
          type: string
          format: date-time
        family_hierarchy:
          $ref: '#/components/schemas/FamilyHierarchy'
        member_count:
          type: integer
        active_member_count:
          type: integer
        structure_metadata:
          type: object
      required:
        - family_id
        - family_name
        - family_type

    FamilyHierarchy:
      type: object
      description: Family hierarchy and organizational structure
      properties:
        hierarchy_levels:
          type: array
          items:
            $ref: '#/components/schemas/HierarchyLevel'
        authority_structure:
          $ref: '#/components/schemas/AuthorityStructure'
        decision_making_hierarchy:
          $ref: '#/components/schemas/DecisionMakingHierarchy'
        role_hierarchy:
          type: object

    FamilyMember:
      type: object
      description: Family member information with administrative details
      properties:
        member_id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        full_name:
          type: string
        family_role:
          type: string
          enum: [parent, child, guardian, extended_family, caregiver, other]
        administrative_role:
          type: string
          enum: [family_admin, co_admin, coordinator, member, guest]
        member_status:
          type: string
          enum: [active, inactive, pending, suspended]
        join_date:
          type: string
          format: date-time
        last_activity:
          type: string
          format: date-time
        permissions:
          $ref: '#/components/schemas/MemberPermissions'
        member_preferences:
          type: object
      required:
        - member_id
        - user_id
        - full_name
        - family_role
        - member_status

    CreateFamilyStructureRequest:
      type: object
      description: Request to create new family structure
      properties:
        family_name:
          type: string
          maxLength: 100
        family_type:
          type: string
          enum: [nuclear, extended, blended, single_parent, multi_generational]
        initial_structure:
          $ref: '#/components/schemas/InitialFamilyStructure'
        governance_preferences:
          $ref: '#/components/schemas/GovernancePreferences'
        initial_policies:
          type: array
          items:
            $ref: '#/components/schemas/InitialPolicy'
        setup_preferences:
          type: object
      required:
        - family_name
        - family_type

    UpdateFamilyStructureRequest:
      type: object
      description: Request to update family structure
      properties:
        structure_changes:
          $ref: '#/components/schemas/StructureChanges'
        hierarchy_updates:
          $ref: '#/components/schemas/HierarchyUpdates'
        validation_options:
          $ref: '#/components/schemas/ValidationOptions'
        update_metadata:
          type: object

    AddFamilyMemberRequest:
      type: object
      description: Request to add new family member
      properties:
        user_id:
          type: string
          format: uuid
        full_name:
          type: string
          maxLength: 100
        family_role:
          type: string
          enum: [parent, child, guardian, extended_family, caregiver, other]
        administrative_role:
          type: string
          enum: [family_admin, co_admin, coordinator, member, guest]
          default: member
        initial_permissions:
          $ref: '#/components/schemas/InitialPermissions'
        onboarding_preferences:
          type: object
      required:
        - user_id
        - full_name
        - family_role

    UpdateFamilyMemberRequest:
      type: object
      description: Request to update family member
      properties:
        family_role:
          type: string
          enum: [parent, child, guardian, extended_family, caregiver, other]
        administrative_role:
          type: string
          enum: [family_admin, co_admin, coordinator, member, guest]
        member_status:
          type: string
          enum: [active, inactive, pending, suspended]
        permission_updates:
          $ref: '#/components/schemas/PermissionUpdates'
        preference_updates:
          type: object

    CreateFamilyPolicyRequest:
      type: object
      description: Request to create family policy
      properties:
        policy_name:
          type: string
          maxLength: 100
        policy_type:
          type: string
          enum: [access_control, privacy, security, coordination, resource_management]
        policy_scope:
          type: string
          enum: [family_wide, role_specific, member_specific, situational]
        policy_rules:
          $ref: '#/components/schemas/PolicyRules'
        enforcement_settings:
          $ref: '#/components/schemas/PolicyEnforcementSettings'
        compliance_requirements:
          type: array
          items:
            type: string
      required:
        - policy_name
        - policy_type
        - policy_scope

    ConfigureFamilyGovernanceRequest:
      type: object
      description: Request to configure family governance
      properties:
        governance_model:
          type: string
          enum: [hierarchical, collaborative, democratic, mixed]
        decision_making_structure:
          $ref: '#/components/schemas/DecisionMakingStructureConfig'
        authority_delegation:
          $ref: '#/components/schemas/AuthorityDelegationConfig'
        governance_policies:
          type: array
          items:
            $ref: '#/components/schemas/GovernancePolicy'
        effectiveness_metrics:
          type: array
          items:
            type: string
      required:
        - governance_model

    # Supporting schemas
    MemberPermissions:
      type: object
      properties:
        access_level:
          type: string
          enum: [full, standard, limited, restricted]
        specific_permissions:
          type: array
          items:
            type: string
        permission_inheritance:
          type: object
        permission_overrides:
          type: object

    FamilyPolicies:
      type: object
      properties:
        access_control_policies:
          type: array
          items:
            $ref: '#/components/schemas/AccessControlPolicy'
        privacy_policies:
          type: array
          items:
            $ref: '#/components/schemas/PrivacyPolicy'
        security_policies:
          type: array
          items:
            $ref: '#/components/schemas/SecurityPolicy'
        coordination_policies:
          type: array
          items:
            $ref: '#/components/schemas/CoordinationPolicy'
        resource_policies:
          type: array
          items:
            $ref: '#/components/schemas/ResourcePolicy'

    # Error schemas
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
            trace_id:
              type: string
          required:
            - code
            - message
      required:
        - error

  responses:
    BadRequestError:
      description: Invalid request parameters or family management operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    ForbiddenError:
      description: Insufficient administrative permissions or policy violation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFoundError:
      description: Family structure or member not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: Internal server error in family management processing
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

tags:
  - name: Family Structure
    description: |
      Family structure management with hierarchy configuration and organizational administration.

      **Structure Management**: Comprehensive family organizational structure and hierarchy management.

  - name: Family Members
    description: |
      Family member management with role assignment, permissions, and administrative oversight.

      **Member Administration**: Complete family member lifecycle management with governance controls.

  - name: Family Policies
    description: |
      Family policy management with governance rules, compliance requirements, and enforcement mechanisms.

      **Policy Administration**: Comprehensive family policy configuration and enforcement management.

  - name: Family Governance
    description: |
      Family governance structure management with decision-making processes and authority distribution.

      **Governance Administration**: Complete family governance framework with administrative oversight.

  - name: Family Coordination
    description: |
      Family coordination management with activity planning, resource allocation, and collaborative operations.

      **Coordination Administration**: Comprehensive family coordination with administrative oversight and optimization.

  - name: Family Resources
    description: |
      Family resource management with allocation strategies, utilization optimization, and administrative oversight.

      **Resource Administration**: Complete family resource management with governance controls and optimization strategies.
