openapi: 3.1.0
info:
  title: Memory-Centric Family AI - Action Execution Framework
  description: |
    **Action Execution Framework Contract**

    This contract defines the action execution framework for the Memory-Centric Family AI system, implementing the P16-P20 cognitive pipeline action execution with comprehensive family safety controls, supervision requirements, and memory-aware action coordination.

    **Action Execution Architecture (P16-P20 Pipeline):**
    - **P16 - Action Planning**: Cognitive-to-action translation with family safety analysis
    - **P17 - Safety Validation**: Multi-layer safety verification and family impact assessment
    - **P18 - Consent & Supervision**: Family consent protocols and supervision requirement validation
    - **P19 - Execution Coordination**: Multi-device action coordination with family awareness
    - **P20 - Real-World Interface**: Safe interface to real-world systems with family protection

    **Memory-Centric Action Design:**
    - All actions informed by family memory context and relationship awareness
    - Action planning considers family history, preferences, and emotional context
    - Episodic memory formation for all action outcomes and family impact
    - Associative memory building between actions and family experiences
    - Memory-driven action personalization and family adaptation

    **Family Safety Framework:**
    - **Multi-Layer Safety**: Technical, family, social, and contextual safety validation
    - **Age-Appropriate Actions**: Age and developmental stage appropriate action filtering
    - **Supervision Requirements**: Dynamic supervision based on action risk and family context
    - **Consent Protocols**: Explicit family consent for all consequential actions
    - **Emergency Overrides**: Emergency action capabilities with immediate family notification

    **Action Categories & Safety Levels:**
    - **Level 0 (Safe)**: Informational actions with no real-world impact
    - **Level 1 (Monitored)**: Low-risk actions with family logging and monitoring
    - **Level 2 (Supervised)**: Medium-risk actions requiring active supervision
    - **Level 3 (Restricted)**: High-risk actions requiring explicit consent and oversight
    - **Level 4 (Blocked)**: Prohibited actions that could harm family or violate values

    **Real-World Integration:**
    - Smart home device control with family presence awareness
    - Communication platform integration with family communication norms
    - Calendar and scheduling coordination with family coordination protocols
    - Content creation and sharing with family privacy and appropriateness controls
    - External service interactions with family security and privacy protection

    **Action Memory & Learning:**
    - All action outcomes contribute to family memory formation
    - Action effectiveness tracking for family-specific adaptation
    - Relationship impact assessment and memory formation
    - Family preference learning and action personalization
    - Cross-device action coordination and family experience continuity
  version: "1.0.0"
  contact:
    name: MemoryOS Action Execution Team
    url: https://familyos.local/support/action-execution
    email: action-execution@familyos.local
  license:
    name: Family OS Private License
    url: https://familyos.local/licenses/family-os

servers:
  - url: https://actions.familyos.local/v1
    description: Production Action Execution Service
  - url: https://staging-actions.familyos.local/v1
    description: Staging Environment
  - url: http://localhost:8083/v1
    description: Local Development

security:
  - ActionAuth: []
  - FamilyOSAuth: []

tags:
  - name: action-planning
    description: P16 - Cognitive action planning and family safety analysis
  - name: safety-validation
    description: P17 - Multi-layer safety verification and family impact assessment
  - name: consent-supervision
    description: P18 - Family consent protocols and supervision requirements
  - name: execution-coordination
    description: P19 - Multi-device action coordination with family awareness
  - name: real-world-interface
    description: P20 - Safe interface to real-world systems
  - name: memory-integration
    description: Action memory formation and family learning
  - name: family-coordination
    description: Family coordination and consensus building for actions

paths:
  # P16 - Action Planning
  /planning/analyze:
    post:
      tags: [action-planning]
      summary: Analyze Cognitive Intent for Action Planning
      description: |
        Convert cognitive processing results from P01-P15 into actionable plans with
        family safety analysis, relationship impact assessment, and memory context integration.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cognitive_trace_id:
                  type: string
                  format: uuid
                cognitive_output:
                  $ref: '#/components/schemas/CognitiveOutput'
                family_context:
                  $ref: '#/components/schemas/FamilyContext'
                action_constraints:
                  $ref: '#/components/schemas/ActionConstraints'
                memory_context:
                  $ref: '#/components/schemas/MemoryContext'
              required: [cognitive_trace_id, cognitive_output, family_context]
      responses:
        '200':
          description: Action planning analysis completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  action_plan:
                    $ref: '#/components/schemas/ActionPlan'
                  safety_analysis:
                    $ref: '#/components/schemas/SafetyAnalysis'
                  family_impact_assessment:
                    $ref: '#/components/schemas/FamilyImpactAssessment'
                  memory_formation_plan:
                    $ref: '#/components/schemas/MemoryFormationPlan'
                  planning_confidence:
                    type: number
                    minimum: 0
                    maximum: 1
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Forbidden'

  /planning/alternatives:
    post:
      tags: [action-planning]
      summary: Generate Alternative Action Plans
      description: |
        Generate multiple alternative action plans with different safety levels,
        family impacts, and memory formation outcomes for family consideration.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                base_plan:
                  $ref: '#/components/schemas/ActionPlan'
                alternative_criteria:
                  $ref: '#/components/schemas/AlternativeCriteria'
                family_preferences:
                  $ref: '#/components/schemas/FamilyPreferences'
              required: [base_plan, alternative_criteria]
      responses:
        '200':
          description: Alternative action plans generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  alternatives:
                    type: array
                    items:
                      $ref: '#/components/schemas/AlternativeActionPlan'
                  recommendation_rank:
                    type: array
                    items:
                      type: integer
                  family_preference_match:
                    type: array
                    items:
                      type: number
                      minimum: 0
                      maximum: 1

  # P17 - Safety Validation
  /safety/validate:
    post:
      tags: [safety-validation]
      summary: Comprehensive Safety Validation
      description: |
        Perform multi-layer safety validation including technical safety, family safety,
        social appropriateness, and contextual safety for proposed actions.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action_plan:
                  $ref: '#/components/schemas/ActionPlan'
                family_context:
                  $ref: '#/components/schemas/FamilyContext'
                safety_criteria:
                  $ref: '#/components/schemas/SafetyCriteria'
                environment_context:
                  $ref: '#/components/schemas/EnvironmentContext'
              required: [action_plan, family_context, safety_criteria]
      responses:
        '200':
          description: Safety validation completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  safety_result:
                    $ref: '#/components/schemas/SafetyValidationResult'
                  safety_score:
                    type: number
                    minimum: 0
                    maximum: 1
                  risk_assessment:
                    $ref: '#/components/schemas/RiskAssessment'
                  mitigation_recommendations:
                    type: array
                    items:
                      $ref: '#/components/schemas/SafetyMitigation'
                  family_safety_verified:
                    type: boolean

  /safety/continuous-monitor:
    post:
      tags: [safety-validation]
      summary: Continuous Safety Monitoring
      description: |
        Establish continuous safety monitoring for ongoing actions with real-time
        family context awareness and adaptive safety threshold management.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                execution_id:
                  type: string
                  format: uuid
                monitoring_parameters:
                  $ref: '#/components/schemas/MonitoringParameters'
                family_context:
                  $ref: '#/components/schemas/FamilyContext'
              required: [execution_id, monitoring_parameters, family_context]
      responses:
        '200':
          description: Continuous monitoring established
          content:
            application/json:
              schema:
                type: object
                properties:
                  monitoring_id:
                    type: string
                    format: uuid
                  monitoring_active:
                    type: boolean
                  safety_thresholds:
                    $ref: '#/components/schemas/SafetyThresholds'
                  alert_configuration:
                    $ref: '#/components/schemas/AlertConfiguration'

  # P18 - Consent & Supervision
  /consent/request:
    post:
      tags: [consent-supervision]
      summary: Request Family Consent for Action
      description: |
        Request explicit family consent for actions requiring approval, with
        age-appropriate presentation and supervision requirement validation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action_plan:
                  $ref: '#/components/schemas/ActionPlan'
                consent_requirements:
                  $ref: '#/components/schemas/ConsentRequirements'
                family_context:
                  $ref: '#/components/schemas/FamilyContext'
                presentation_options:
                  $ref: '#/components/schemas/PresentationOptions'
              required: [action_plan, consent_requirements, family_context]
      responses:
        '200':
          description: Consent request initiated
          content:
            application/json:
              schema:
                type: object
                properties:
                  consent_request_id:
                    type: string
                    format: uuid
                  required_approvers:
                    type: array
                    items:
                      $ref: '#/components/schemas/RequiredApprover'
                  consent_deadline:
                    type: string
                    format: date-time
                  presentation_context:
                    $ref: '#/components/schemas/PresentationContext'

  /consent/status/{consent_request_id}:
    get:
      tags: [consent-supervision]
      summary: Check Consent Status
      description: |
        Check the current status of a family consent request including partial
        approvals, rejections, and pending responses.
      parameters:
        - name: consent_request_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Consent status retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  consent_status:
                    type: string
                    enum: [pending, partial, approved, denied, expired]
                  approvals:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConsentApproval'
                  pending_approvers:
                    type: array
                    items:
                      $ref: '#/components/schemas/PendingApprover'
                  denial_reasons:
                    type: array
                    items:
                      $ref: '#/components/schemas/DenialReason'

  /supervision/requirements:
    post:
      tags: [consent-supervision]
      summary: Assess Supervision Requirements
      description: |
        Assess dynamic supervision requirements based on action risk, family context,
        participant age, and environmental factors.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action_plan:
                  $ref: '#/components/schemas/ActionPlan'
                participants:
                  type: array
                  items:
                    $ref: '#/components/schemas/ActionParticipant'
                family_context:
                  $ref: '#/components/schemas/FamilyContext'
                environment_context:
                  $ref: '#/components/schemas/EnvironmentContext'
              required: [action_plan, participants, family_context]
      responses:
        '200':
          description: Supervision requirements assessed
          content:
            application/json:
              schema:
                type: object
                properties:
                  supervision_required:
                    type: boolean
                  supervision_level:
                    type: string
                    enum: [none, passive, active, intensive, direct]
                  supervisor_requirements:
                    $ref: '#/components/schemas/SupervisorRequirements'
                  supervision_duration:
                    type: string
                    enum: [pre_action, during_action, post_action, extended]

  # P19 - Execution Coordination
  /coordination/prepare:
    post:
      tags: [execution-coordination]
      summary: Prepare Multi-Device Action Coordination
      description: |
        Prepare coordinated action execution across multiple family devices with
        synchronized timing, family awareness, and distributed safety monitoring.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action_plan:
                  $ref: '#/components/schemas/ActionPlan'
                participating_devices:
                  type: array
                  items:
                    $ref: '#/components/schemas/ParticipatingDevice'
                coordination_parameters:
                  $ref: '#/components/schemas/CoordinationParameters'
                family_context:
                  $ref: '#/components/schemas/FamilyContext'
              required: [action_plan, participating_devices, family_context]
      responses:
        '200':
          description: Coordination preparation completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  coordination_id:
                    type: string
                    format: uuid
                  device_assignments:
                    type: array
                    items:
                      $ref: '#/components/schemas/DeviceAssignment'
                  execution_timeline:
                    $ref: '#/components/schemas/ExecutionTimeline'
                  synchronization_plan:
                    $ref: '#/components/schemas/SynchronizationPlan'

  /coordination/execute:
    post:
      tags: [execution-coordination]
      summary: Execute Coordinated Family Action
      description: |
        Execute coordinated action across family devices with real-time safety
        monitoring, family awareness, and memory formation tracking.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                coordination_id:
                  type: string
                  format: uuid
                execution_parameters:
                  $ref: '#/components/schemas/ExecutionParameters'
                safety_monitoring:
                  $ref: '#/components/schemas/SafetyMonitoring'
              required: [coordination_id, execution_parameters]
      responses:
        '200':
          description: Coordinated execution initiated
          content:
            application/json:
              schema:
                type: object
                properties:
                  execution_id:
                    type: string
                    format: uuid
                  execution_status:
                    type: string
                    enum: [initiated, coordinating, executing, completing, completed, failed]
                  device_statuses:
                    type: array
                    items:
                      $ref: '#/components/schemas/DeviceExecutionStatus'
                  progress_tracker:
                    $ref: '#/components/schemas/ProgressTracker'

  /coordination/status/{execution_id}:
    get:
      tags: [execution-coordination]
      summary: Monitor Execution Status
      description: |
        Monitor real-time execution status across all participating devices with
        family safety monitoring and memory formation tracking.
      parameters:
        - name: execution_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Execution status retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  overall_status:
                    type: string
                    enum: [executing, completing, completed, failed, cancelled]
                  device_progress:
                    type: array
                    items:
                      $ref: '#/components/schemas/DeviceProgress'
                  safety_status:
                    $ref: '#/components/schemas/SafetyStatus'
                  family_impact_tracking:
                    $ref: '#/components/schemas/FamilyImpactTracking'
                  memory_formation_status:
                    $ref: '#/components/schemas/MemoryFormationStatus'

  # P20 - Real-World Interface
  /real-world/smart-home:
    post:
      tags: [real-world-interface]
      summary: Smart Home Device Control
      description: |
        Interface with smart home devices with family presence awareness,
        age-appropriate controls, and safety validation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_command:
                  $ref: '#/components/schemas/SmartHomeCommand'
                family_context:
                  $ref: '#/components/schemas/FamilyContext'
                safety_parameters:
                  $ref: '#/components/schemas/SafetyParameters'
              required: [device_command, family_context]
      responses:
        '200':
          description: Smart home command executed
          content:
            application/json:
              schema:
                type: object
                properties:
                  command_result:
                    $ref: '#/components/schemas/CommandResult'
                  family_impact:
                    $ref: '#/components/schemas/FamilyImpact'
                  memory_event:
                    $ref: '#/components/schemas/MemoryEvent'

  /real-world/communication:
    post:
      tags: [real-world-interface]
      summary: Family Communication Platform Interface
      description: |
        Interface with communication platforms following family communication norms,
        privacy controls, and age-appropriate content filtering.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                communication_action:
                  $ref: '#/components/schemas/CommunicationAction'
                family_context:
                  $ref: '#/components/schemas/FamilyContext'
                privacy_requirements:
                  $ref: '#/components/schemas/PrivacyRequirements'
              required: [communication_action, family_context]
      responses:
        '200':
          description: Communication action executed
          content:
            application/json:
              schema:
                type: object
                properties:
                  communication_result:
                    $ref: '#/components/schemas/CommunicationResult'
                  privacy_compliance:
                    type: boolean
                  family_notification:
                    $ref: '#/components/schemas/FamilyNotification'

  /real-world/content:
    post:
      tags: [real-world-interface]
      summary: Content Creation and Sharing
      description: |
        Create and share content with family privacy controls, appropriateness
        filtering, and family coordination for shared content.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content_action:
                  $ref: '#/components/schemas/ContentAction'
                family_context:
                  $ref: '#/components/schemas/FamilyContext'
                sharing_parameters:
                  $ref: '#/components/schemas/SharingParameters'
              required: [content_action, family_context]
      responses:
        '200':
          description: Content action executed
          content:
            application/json:
              schema:
                type: object
                properties:
                  content_result:
                    $ref: '#/components/schemas/ContentResult'
                  family_sharing_status:
                    $ref: '#/components/schemas/FamilySharingStatus'
                  appropriateness_verification:
                    type: boolean

  # Memory Integration
  /memory/formation:
    post:
      tags: [memory-integration]
      summary: Form Action Memory
      description: |
        Form episodic and associative memories from action outcomes with family
        context preservation and relationship impact assessment.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                execution_id:
                  type: string
                  format: uuid
                action_outcome:
                  $ref: '#/components/schemas/ActionOutcome'
                family_context:
                  $ref: '#/components/schemas/FamilyContext'
                memory_parameters:
                  $ref: '#/components/schemas/MemoryParameters'
              required: [execution_id, action_outcome, family_context]
      responses:
        '200':
          description: Action memory formed
          content:
            application/json:
              schema:
                type: object
                properties:
                  memory_id:
                    type: string
                    format: uuid
                  memory_type:
                    type: string
                    enum: [episodic, procedural, emotional, associative]
                  family_associations:
                    type: array
                    items:
                      $ref: '#/components/schemas/FamilyAssociation'
                  learning_impact:
                    $ref: '#/components/schemas/LearningImpact'

  /memory/learning:
    post:
      tags: [memory-integration]
      summary: Extract Action Learning
      description: |
        Extract learning from action outcomes for family-specific adaptation,
        preference updating, and future action improvement.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action_history:
                  type: array
                  items:
                    $ref: '#/components/schemas/ActionHistoryItem'
                family_context:
                  $ref: '#/components/schemas/FamilyContext'
                learning_parameters:
                  $ref: '#/components/schemas/LearningParameters'
              required: [action_history, family_context]
      responses:
        '200':
          description: Action learning extracted
          content:
            application/json:
              schema:
                type: object
                properties:
                  learning_insights:
                    type: array
                    items:
                      $ref: '#/components/schemas/LearningInsight'
                  preference_updates:
                    type: array
                    items:
                      $ref: '#/components/schemas/PreferenceUpdate'
                  family_adaptation:
                    $ref: '#/components/schemas/FamilyAdaptation'

  # Family Coordination
  /family/consensus:
    post:
      tags: [family-coordination]
      summary: Build Family Consensus for Actions
      description: |
        Facilitate family consensus building for actions requiring coordinated
        family decisions with distributed voting and discussion support.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action_proposal:
                  $ref: '#/components/schemas/ActionProposal'
                family_context:
                  $ref: '#/components/schemas/FamilyContext'
                consensus_parameters:
                  $ref: '#/components/schemas/ConsensusParameters'
              required: [action_proposal, family_context]
      responses:
        '200':
          description: Consensus building initiated
          content:
            application/json:
              schema:
                type: object
                properties:
                  consensus_id:
                    type: string
                    format: uuid
                  voting_status:
                    $ref: '#/components/schemas/VotingStatus'
                  discussion_channels:
                    type: array
                    items:
                      $ref: '#/components/schemas/DiscussionChannel'
                  consensus_threshold:
                    type: number
                    minimum: 0
                    maximum: 1

  /family/emergency-override:
    post:
      tags: [family-coordination]
      summary: Emergency Action Override
      description: |
        Execute emergency action override with immediate family notification,
        safety validation, and post-action family coordination.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emergency_action:
                  $ref: '#/components/schemas/EmergencyAction'
                emergency_context:
                  $ref: '#/components/schemas/EmergencyContext'
                family_notification:
                  $ref: '#/components/schemas/FamilyNotification'
              required: [emergency_action, emergency_context]
      responses:
        '200':
          description: Emergency override executed
          content:
            application/json:
              schema:
                type: object
                properties:
                  override_id:
                    type: string
                    format: uuid
                  emergency_status:
                    type: string
                    enum: [executing, completed, failed]
                  family_notifications_sent:
                    type: boolean
                  post_action_coordination:
                    $ref: '#/components/schemas/PostActionCoordination'

  # Health and Status
  /health:
    get:
      tags: [system]
      summary: Action Execution System Health
      description: Check health status of action execution framework
      responses:
        '200':
          description: Health status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy, degraded, unhealthy]
                  pipeline_status:
                    $ref: '#/components/schemas/PipelineHealth'
                  safety_system_status:
                    $ref: '#/components/schemas/SafetySystemStatus'
                  family_coordination_status:
                    $ref: '#/components/schemas/FamilyCoordinationStatus'

components:
  securitySchemes:
    ActionAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Action execution authentication token

    FamilyOSAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.familyos.local/oauth/authorize
          tokenUrl: https://auth.familyos.local/oauth/token
          scopes:
            action:planning: Action planning capabilities
            action:execution: Action execution capabilities
            family:coordination: Family coordination and consensus
            safety:validation: Safety validation and monitoring
            memory:formation: Action memory formation

  schemas:
    # Core Action Schemas
    CognitiveOutput:
      type: object
      properties:
        cognitive_trace_id:
          type: string
          format: uuid
        processing_results:
          type: object
          description: Encrypted cognitive processing results
        intent_analysis:
          $ref: '#/components/schemas/IntentAnalysis'
        semantic_understanding:
          $ref: '#/components/schemas/SemanticUnderstanding'
        emotional_context:
          $ref: '#/components/schemas/EmotionalContext'
        confidence_score:
          type: number
          minimum: 0
          maximum: 1
      required: [cognitive_trace_id, processing_results, intent_analysis]

    ActionPlan:
      type: object
      properties:
        plan_id:
          type: string
          format: uuid
        action_type:
          type: string
          enum: [information, communication, control, creation, coordination, emergency]
        planned_actions:
          type: array
          items:
            $ref: '#/components/schemas/PlannedAction'
        execution_sequence:
          type: array
          items:
            type: string
            format: uuid
        safety_level:
          type: integer
          minimum: 0
          maximum: 4
        family_impact_level:
          type: string
          enum: [none, minimal, moderate, significant, major]
        memory_formation_expected:
          type: boolean
        estimated_duration:
          type: integer
          description: Estimated execution time in seconds
      required: [plan_id, action_type, planned_actions, safety_level]

    PlannedAction:
      type: object
      properties:
        action_id:
          type: string
          format: uuid
        action_description:
          type: string
        target_system:
          type: string
          enum: [smart_home, communication, content, scheduling, external_service]
        action_parameters:
          type: object
        safety_requirements:
          $ref: '#/components/schemas/SafetyRequirements'
        family_permissions_required:
          type: array
          items:
            type: string
        reversibility:
          type: boolean
        family_notification_required:
          type: boolean
      required: [action_id, action_description, target_system, safety_requirements]

    # Safety and Validation Schemas
    SafetyAnalysis:
      type: object
      properties:
        overall_safety_score:
          type: number
          minimum: 0
          maximum: 1
        technical_safety:
          $ref: '#/components/schemas/TechnicalSafety'
        family_safety:
          $ref: '#/components/schemas/FamilySafety'
        social_safety:
          $ref: '#/components/schemas/SocialSafety'
        contextual_safety:
          $ref: '#/components/schemas/ContextualSafety'
        risk_factors:
          type: array
          items:
            $ref: '#/components/schemas/RiskFactor'
        mitigation_strategies:
          type: array
          items:
            $ref: '#/components/schemas/MitigationStrategy'
      required: [overall_safety_score, technical_safety, family_safety]

    FamilyImpactAssessment:
      type: object
      properties:
        impact_scope:
          type: string
          enum: [individual, dyadic, family, extended, external]
        affected_relationships:
          type: array
          items:
            type: string
        emotional_impact:
          $ref: '#/components/schemas/EmotionalImpact'
        privacy_impact:
          $ref: '#/components/schemas/PrivacyImpact'
        trust_impact:
          $ref: '#/components/schemas/TrustImpact'
        developmental_impact:
          $ref: '#/components/schemas/DevelopmentalImpact'
        long_term_effects:
          type: array
          items:
            type: string
        family_value_alignment:
          type: number
          minimum: 0
          maximum: 1
      required: [impact_scope, emotional_impact, family_value_alignment]

    SafetyValidationResult:
      type: object
      properties:
        validation_status:
          type: string
          enum: [approved, conditional, denied, requires_supervision]
        validation_score:
          type: number
          minimum: 0
          maximum: 1
        failed_criteria:
          type: array
          items:
            type: string
        conditional_requirements:
          type: array
          items:
            $ref: '#/components/schemas/ConditionalRequirement'
        supervision_level_required:
          type: string
          enum: [none, passive, active, intensive, direct]
        family_approval_required:
          type: boolean
      required: [validation_status, validation_score]

    # Consent and Supervision Schemas
    ConsentRequirements:
      type: object
      properties:
        consent_level:
          type: string
          enum: [none, notification, approval, unanimous]
        required_approvers:
          type: array
          items:
            $ref: '#/components/schemas/RequiredApprover'
        consent_timeout:
          type: integer
          description: Consent timeout in minutes
        age_restrictions:
          type: array
          items:
            $ref: '#/components/schemas/AgeRestriction'
        supervision_requirements:
          $ref: '#/components/schemas/SupervisionRequirements'
        emergency_override_allowed:
          type: boolean
      required: [consent_level, required_approvers]

    RequiredApprover:
      type: object
      properties:
        approver_id:
          type: string
          format: uuid
        approver_role:
          type: string
          enum: [parent, guardian, adult_sibling, family_admin]
        approval_weight:
          type: number
          minimum: 0
          maximum: 1
        required_presence:
          type: boolean
        age_appropriate_presentation:
          type: boolean
      required: [approver_id, approver_role, approval_weight]

    SupervisionRequirements:
      type: object
      properties:
        supervision_level:
          type: string
          enum: [none, passive, active, intensive, direct]
        supervisor_qualifications:
          type: array
          items:
            type: string
        supervision_duration:
          type: string
          enum: [pre_action, during_action, post_action, extended]
        supervisor_actions:
          type: array
          items:
            type: string
        emergency_stop_authority:
          type: boolean
        real_time_monitoring:
          type: boolean
      required: [supervision_level, supervision_duration]

    # Execution Coordination Schemas
    ParticipatingDevice:
      type: object
      properties:
        device_id:
          type: string
          format: uuid
        device_type:
          type: string
        device_capabilities:
          type: array
          items:
            type: string
        device_location:
          type: string
        device_owner:
          type: string
          format: uuid
        safety_constraints:
          type: array
          items:
            type: string
        execution_priority:
          type: integer
          minimum: 1
          maximum: 10
      required: [device_id, device_type, device_capabilities]

    ExecutionTimeline:
      type: object
      properties:
        total_duration:
          type: integer
          description: Total execution time in seconds
        preparation_phase:
          type: integer
          description: Preparation time in seconds
        execution_phase:
          type: integer
          description: Main execution time in seconds
        completion_phase:
          type: integer
          description: Completion time in seconds
        synchronization_points:
          type: array
          items:
            $ref: '#/components/schemas/SynchronizationPoint'
        checkpoint_intervals:
          type: integer
          description: Safety checkpoint interval in seconds
      required: [total_duration, execution_phase]

    DeviceExecutionStatus:
      type: object
      properties:
        device_id:
          type: string
          format: uuid
        execution_status:
          type: string
          enum: [ready, executing, completed, failed, cancelled]
        progress_percentage:
          type: number
          minimum: 0
          maximum: 100
        current_action:
          type: string
        safety_status:
          type: string
          enum: [safe, warning, concern, danger]
        error_information:
          $ref: '#/components/schemas/ErrorInformation'
        family_impact_detected:
          type: boolean
      required: [device_id, execution_status, progress_percentage]

    # Real-World Interface Schemas
    SmartHomeCommand:
      type: object
      properties:
        command_type:
          type: string
          enum: [lighting, climate, security, entertainment, appliance]
        target_device:
          type: string
        command_parameters:
          type: object
        family_presence_required:
          type: boolean
        age_restrictions:
          type: array
          items:
            type: integer
        safety_interlocks:
          type: array
          items:
            type: string
        reversibility:
          type: boolean
      required: [command_type, target_device, command_parameters]

    CommunicationAction:
      type: object
      properties:
        communication_type:
          type: string
          enum: [message, call, email, social_post, notification]
        recipients:
          type: array
          items:
            type: string
        content:
          type: object
          description: Encrypted communication content
        privacy_level:
          type: string
          enum: [personal, family, extended, public]
        age_appropriate:
          type: boolean
        family_communication_norms:
          type: object
        urgency_level:
          type: string
          enum: [low, normal, high, urgent, emergency]
      required: [communication_type, recipients, content, privacy_level]

    ContentAction:
      type: object
      properties:
        content_type:
          type: string
          enum: [text, image, video, audio, document, presentation]
        creation_parameters:
          type: object
        sharing_scope:
          type: string
          enum: [personal, family, extended, public]
        content_guidelines:
          type: object
        family_appropriateness:
          type: boolean
        copyright_compliance:
          type: boolean
        privacy_protection:
          type: object
      required: [content_type, creation_parameters, sharing_scope]

    # Memory Integration Schemas
    ActionOutcome:
      type: object
      properties:
        outcome_type:
          type: string
          enum: [success, partial_success, failure, cancelled, deferred]
        actual_results:
          type: object
        expected_vs_actual:
          $ref: '#/components/schemas/ExpectedVsActual'
        family_reaction:
          $ref: '#/components/schemas/FamilyReaction'
        unintended_consequences:
          type: array
          items:
            type: string
        learning_opportunities:
          type: array
          items:
            type: string
        memory_significance:
          type: number
          minimum: 0
          maximum: 1
      required: [outcome_type, actual_results, family_reaction]

    MemoryFormationPlan:
      type: object
      properties:
        memory_types:
          type: array
          items:
            type: string
            enum: [episodic, procedural, emotional, associative, semantic]
        family_associations:
          type: array
          items:
            $ref: '#/components/schemas/PlannedAssociation'
        emotional_markers:
          type: array
          items:
            $ref: '#/components/schemas/EmotionalMarker'
        consolidation_priority:
          type: integer
          minimum: 1
          maximum: 10
        cross_device_formation:
          type: boolean
        privacy_preservation:
          type: object
      required: [memory_types, consolidation_priority]

    LearningImpact:
      type: object
      properties:
        preference_learning:
          type: array
          items:
            $ref: '#/components/schemas/PreferenceLearning'
        behavioral_adaptation:
          type: array
          items:
            $ref: '#/components/schemas/BehavioralAdaptation'
        family_pattern_updates:
          type: array
          items:
            $ref: '#/components/schemas/FamilyPatternUpdate'
        safety_learning:
          type: array
          items:
            $ref: '#/components/schemas/SafetyLearning'
        relationship_insights:
          type: array
          items:
            $ref: '#/components/schemas/RelationshipInsight'
      required: [preference_learning, family_pattern_updates]

    # Family Coordination Schemas
    ActionProposal:
      type: object
      properties:
        proposal_id:
          type: string
          format: uuid
        proposed_action:
          $ref: '#/components/schemas/ActionPlan'
        proposal_rationale:
          type: string
        family_benefits:
          type: array
          items:
            type: string
        potential_concerns:
          type: array
          items:
            type: string
        alternative_options:
          type: array
          items:
            $ref: '#/components/schemas/AlternativeOption'
        urgency_level:
          type: string
          enum: [low, normal, high, urgent]
      required: [proposal_id, proposed_action, proposal_rationale]

    VotingStatus:
      type: object
      properties:
        total_eligible_voters:
          type: integer
        votes_cast:
          type: integer
        votes_in_favor:
          type: integer
        votes_against:
          type: integer
        abstentions:
          type: integer
        consensus_threshold:
          type: number
          minimum: 0
          maximum: 1
        current_consensus_level:
          type: number
          minimum: 0
          maximum: 1
        voting_deadline:
          type: string
          format: date-time
      required: [total_eligible_voters, votes_cast, consensus_threshold]

    EmergencyAction:
      type: object
      properties:
        emergency_type:
          type: string
          enum: [safety, health, security, family_crisis, system_failure]
        action_urgency:
          type: string
          enum: [immediate, urgent, high_priority]
        bypass_normal_approval:
          type: boolean
        immediate_family_notification:
          type: boolean
        emergency_justification:
          type: string
        post_action_review_required:
          type: boolean
        emergency_contact_notification:
          type: boolean
      required: [emergency_type, action_urgency, emergency_justification]

    # Supporting Schemas
    FamilyContext:
      type: object
      properties:
        family_id:
          type: string
          format: uuid
        active_members:
          type: array
          items:
            type: string
            format: uuid
        current_family_mood:
          type: string
        family_schedule_context:
          type: object
        relationship_dynamics:
          type: object
        privacy_preferences:
          type: object
        supervision_context:
          type: object
        family_values:
          type: object
      required: [family_id, active_members]

    MemoryContext:
      type: object
      properties:
        relevant_memories:
          type: array
          items:
            type: string
            format: uuid
        family_history_context:
          type: object
        emotional_memory_context:
          type: object
        preference_context:
          type: object
        relationship_memory_context:
          type: object
        memory_formation_readiness:
          type: boolean
      required: [relevant_memories, memory_formation_readiness]

    # Additional schemas would continue here...
    # Due to length constraints, showing key representative schemas
    # The full implementation would include all referenced schemas

    # Error Schema
    ActionError:
      type: object
      properties:
        error_code:
          type: string
        error_message:
          type: string
        error_context:
          type: object
        safety_impact:
          type: string
          enum: [none, minimal, moderate, significant, severe]
        family_impact:
          type: string
          enum: [none, minimal, moderate, significant, severe]
        recovery_actions:
          type: array
          items:
            type: string
        immediate_notification_required:
          type: boolean
      required: [error_code, error_message, safety_impact, family_impact]

  responses:
    BadRequest:
      description: Invalid request parameters or malformed data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionError'

    Forbidden:
      description: Insufficient permissions for action execution
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionError'
