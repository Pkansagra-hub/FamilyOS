openapi: 3.1.0
info:
  title: MemoryOS Agent Plane API
  description: |
    **Memory-Centric Family AI - Agent Plane API**

    The Agent Plane provides LLM agents with comprehensive access to the Memory-Centric Family AI system. This plane is specifically designed for AI agents to operate as intelligent family members with contextual awareness, emotional intelligence, and family coordination capabilities.

    **Core Agent Capabilities:**
    - **Memory Operations**: Direct access to Memory Backbone for formation, retrieval, consolidation, and sync
    - **Tool Integration**: Access to family-aware tools and connectors for external service integration
    - **Cognitive Processing**: Interface to brain-inspired cognitive architecture for intelligent decision making
    - **Family Intelligence**: Relationship-aware operations with emotional context and family coordination
    - **Context Analysis**: Deep understanding of family dynamics, environmental context, and temporal patterns

    **Memory-Centric Design Principles:**
    - Memory as the backbone that enables all intelligent agent operations
    - Device-local memory modules with E2EE family sync for privacy and security
    - User-controlled permissions with simple, explicit commands for sensitive operations
    - Family intelligence derived from contextual memory sharing and relationship understanding

    **Agent Architecture Integration:**
    - **Memory Backbone**: Core memory formation, retrieval, consolidation, and family sync
    - **Cognitive Core**: Brain-inspired processing for attention, working memory, and decision making
    - **Family Intelligence**: Relationship understanding, emotional context, and family coordination
    - **Device Ecosystem**: Cross-device operation with handoff, sync, and capability adaptation

    **Security & Privacy:**
    - Agent permissions derived from family member authorization
    - Memory space isolation (personal → selective → shared → extended → interfamily)
    - Age-appropriate content filtering and family safety protocols
    - E2EE memory sync with family consent and transparency controls
  version: "1.0.0"
  contact:
    name: MemoryOS Agent API Team
    url: https://familyos.local/support/agent-api
    email: agent-api@familyos.local
  license:
    name: Family OS Private License
    url: https://familyos.local/licenses/family-os

servers:
  - url: https://api.familyos.local/agent/v1
    description: Production Agent Plane
  - url: https://staging-api.familyos.local/agent/v1
    description: Staging Environment
  - url: http://localhost:8080/agent/v1
    description: Local Development

security:
  - AgentAuth: []
  - FamilyOSAuth: []

tags:
  - name: memory-operations
    description: Memory Backbone operations for formation, retrieval, and consolidation
    externalDocs:
      url: https://docs.familyos.local/agent/memory-operations
  - name: cognitive-processing
    description: Brain-inspired cognitive processing and decision making
    externalDocs:
      url: https://docs.familyos.local/agent/cognitive
  - name: family-intelligence
    description: Relationship-aware operations and family coordination
    externalDocs:
      url: https://docs.familyos.local/agent/family
  - name: context-analysis
    description: Environmental and temporal context understanding
    externalDocs:
      url: https://docs.familyos.local/agent/context
  - name: tool-registry
    description: Tool discovery and execution capabilities
    externalDocs:
      url: https://docs.familyos.local/agent/tools
  - name: intelligence-advisory
    description: Advisory-mode intelligence services
    externalDocs:
      url: https://docs.familyos.local/agent/advisory

paths:
  # Memory Operations
  /memory/formation:
    $ref: "./agent/memory-operations.openapi.v1.yaml#/paths/~1memory~1formation"

  /memory/retrieval:
    $ref: "./agent/memory-operations.openapi.v1.yaml#/paths/~1memory~1retrieval"

  /memory/consolidation:
    $ref: "./agent/memory-operations.openapi.v1.yaml#/paths/~1memory~1consolidation"

  /memory/association:
    $ref: "./agent/memory-operations.openapi.v1.yaml#/paths/~1memory~1association"

  /memory/sync:
    $ref: "./agent/memory-operations.openapi.v1.yaml#/paths/~1memory~1sync"

  /memory/spaces:
    $ref: "./agent/memory-operations.openapi.v1.yaml#/paths/~1memory~1spaces"

  /memory/patterns:
    $ref: "./agent/memory-operations.openapi.v1.yaml#/paths/~1memory~1patterns"

  # Cognitive Processing
  /cognitive/attention:
    $ref: "./agent/cognitive-processing.openapi.v1.yaml#/paths/~1cognitive~1attention"

  /cognitive/working-memory:
    $ref: "./agent/cognitive-processing.openapi.v1.yaml#/paths/~1cognitive~1working-memory"

  /cognitive/hippocampus:
    $ref: "./agent/cognitive-processing.openapi.v1.yaml#/paths/~1cognitive~1hippocampus"

  /cognitive/global-workspace:
    $ref: "./agent/cognitive-processing.openapi.v1.yaml#/paths/~1cognitive~1global-workspace"

  /cognitive/affect:
    $ref: "./agent/cognitive-processing.openapi.v1.yaml#/paths/~1cognitive~1affect"

  /cognitive/decision:
    $ref: "./agent/cognitive-processing.openapi.v1.yaml#/paths/~1cognitive~1decision"

  # Family Intelligence
  /family/members:
    $ref: "./agent/family-relationship-management.openapi.v1.yaml#/paths/~1family~1members"

  /family/relationships:
    $ref: "./agent/family-relationship-management.openapi.v1.yaml#/paths/~1family~1relationships"

  /family/coordination:
    $ref: "./agent/family-relationship-management.openapi.v1.yaml#/paths/~1family~1coordination"

  /family/consensus:
    $ref: "./agent/family-relationship-management.openapi.v1.yaml#/paths/~1family~1consensus"

  /family/emergency:
    $ref: "./agent/family-relationship-management.openapi.v1.yaml#/paths/~1family~1emergency"

  /family/policies:
    $ref: "./agent/family-relationship-management.openapi.v1.yaml#/paths/~1family~1policies"

  # Context Analysis
  /context/environmental:
    $ref: "./agent/context-analysis.openapi.v1.yaml#/paths/~1context~1environmental"

  /context/temporal:
    $ref: "./agent/context-analysis.openapi.v1.yaml#/paths/~1context~1temporal"

  /context/emotional:
    $ref: "./agent/context-analysis.openapi.v1.yaml#/paths/~1context~1emotional"

  /context/social:
    $ref: "./agent/context-analysis.openapi.v1.yaml#/paths/~1context~1social"

  /context/device:
    $ref: "./agent/context-analysis.openapi.v1.yaml#/paths/~1context~1device"

  /context/activity:
    $ref: "./agent/context-analysis.openapi.v1.yaml#/paths/~1context~1activity"

  # Intelligence Advisory
  /advisory/recommendations:
    $ref: "./agent/intelligence-advisory.openapi.v1.yaml#/paths/~1advisory~1recommendations"

  /advisory/insights:
    $ref: "./agent/intelligence-advisory.openapi.v1.yaml#/paths/~1advisory~1insights"

  /advisory/predictions:
    $ref: "./agent/intelligence-advisory.openapi.v1.yaml#/paths/~1advisory~1predictions"

  /advisory/optimization:
    $ref: "./agent/intelligence-advisory.openapi.v1.yaml#/paths/~1advisory~1optimization"

  /advisory/learning:
    $ref: "./agent/intelligence-advisory.openapi.v1.yaml#/paths/~1advisory~1learning"

  # Tool Registry & Execution
  /tools/registry:
    get:
      tags: [tool-registry]
      summary: List Available Tools
      description: |
        Discover available tools and their capabilities for agent execution.
        Returns tools filtered by family permissions and current context.
      parameters:
        - name: category
          in: query
          description: Filter tools by category
          schema:
            type: string
            enum: [memory, communication, scheduling, automation, analysis, family]
        - name: family_context
          in: query
          description: Current family context for permission filtering
          schema:
            type: string
            pattern: "^(personal|selective|shared|extended|interfamily):[A-Za-z0-9_\\-\\.]+$"
        - name: capability_required
          in: query
          description: Required tool capability
          schema:
            type: array
            items:
              type: string
              enum: [read, write, execute, family_coordination, external_integration]
      responses:
        '200':
          description: Available tools with capabilities and permissions
          content:
            application/json:
              schema:
                type: object
                properties:
                  tools:
                    type: array
                    items:
                      $ref: '#/components/schemas/ToolDescriptor'
                  total_count:
                    type: integer
                  filtered_by_permissions:
                    type: boolean

  /tools/{tool_id}/execute:
    post:
      tags: [tool-registry]
      summary: Execute Tool
      description: |
        Execute a specific tool with parameters and family context.
        Execution is subject to family permissions and safety controls.
      parameters:
        - name: tool_id
          in: path
          required: true
          description: Unique tool identifier
          schema:
            type: string
            pattern: "^[a-z0-9_]+$"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                parameters:
                  type: object
                  description: Tool-specific execution parameters
                family_context:
                  $ref: '#/components/schemas/FamilyContext'
                memory_context:
                  $ref: '#/components/schemas/MemoryContext'
                execution_mode:
                  type: string
                  enum: [immediate, scheduled, advisory_only]
                  default: immediate
              required: [parameters, family_context]
      responses:
        '200':
          description: Tool execution result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolExecutionResult'
        '202':
          description: Tool execution scheduled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledExecution'

  # Agent Health & Capabilities
  /agent/health:
    get:
      tags: [system]
      summary: Agent Health Check
      description: Check agent health and capability status
      responses:
        '200':
          description: Agent health status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy, degraded, unhealthy]
                  memory_status:
                    $ref: '#/components/schemas/MemoryStatus'
                  cognitive_status:
                    $ref: '#/components/schemas/CognitiveStatus'
                  family_status:
                    $ref: '#/components/schemas/FamilyStatus'
                  last_check:
                    type: string
                    format: date-time

  /agent/capabilities:
    get:
      tags: [system]
      summary: Get Agent Capabilities
      description: |
        Retrieve current agent capabilities based on family permissions,
        device context, and system configuration.
      responses:
        '200':
          description: Agent capabilities
          content:
            application/json:
              schema:
                type: object
                properties:
                  memory_capabilities:
                    $ref: '#/components/schemas/MemoryCapabilities'
                  cognitive_capabilities:
                    $ref: '#/components/schemas/CognitiveCapabilities'
                  family_capabilities:
                    $ref: '#/components/schemas/FamilyCapabilities'
                  tool_capabilities:
                    $ref: '#/components/schemas/ToolCapabilities'
                  limitations:
                    type: array
                    items:
                      type: string

components:
  securitySchemes:
    AgentAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Agent authentication token with family permissions

    FamilyOSAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.familyos.local/oauth/authorize
          tokenUrl: https://auth.familyos.local/oauth/token
          scopes:
            memory:read: Read access to family memory
            memory:write: Write access to family memory
            family:coordinate: Family coordination capabilities
            tools:execute: Tool execution permissions
            advisory:access: Intelligence advisory services

  schemas:
    # Core Context Schemas
    FamilyContext:
      type: object
      properties:
        family_id:
          type: string
          format: uuid
        relationship_context:
          type: string
          description: Active relationship context (e.g., 'ab', 'abc', 'family')
        emotional_context:
          $ref: '#/components/schemas/EmotionalContext'
        privacy_level:
          type: string
          enum: [personal, selective, shared, extended, interfamily]
        supervision_required:
          type: boolean
      required: [family_id, relationship_context, privacy_level]

    MemoryContext:
      type: object
      properties:
        memory_space:
          type: string
          enum: [personal, selective, shared, extended, interfamily]
        memory_operation:
          type: string
          enum: [formation, retrieval, consolidation, sync, analysis]
        quality_requirements:
          $ref: '#/components/schemas/MemoryQuality'
        temporal_context:
          $ref: '#/components/schemas/TemporalContext'
      required: [memory_space, memory_operation]

    EmotionalContext:
      type: object
      properties:
        family_mood:
          type: string
          enum: [positive, neutral, negative, mixed, unknown]
        emotional_intensity:
          type: number
          minimum: 0
          maximum: 1
        emotional_regulation_needed:
          type: boolean
        emotional_contagion:
          type: boolean

    MemoryQuality:
      type: object
      properties:
        confidence:
          type: number
          minimum: 0
          maximum: 1
        emotional_salience:
          type: number
          minimum: 0
          maximum: 1
        importance_score:
          type: number
          minimum: 0
          maximum: 1
        accuracy_estimate:
          type: number
          minimum: 0
          maximum: 1

    TemporalContext:
      type: object
      properties:
        event_time:
          type: string
          format: date-time
        memory_age:
          type: integer
          description: Memory age in days
        time_sensitivity:
          type: string
          enum: [immediate, urgent, normal, low, none]

    # Tool Execution Schemas
    ToolDescriptor:
      type: object
      properties:
        tool_id:
          type: string
        name:
          type: string
        description:
          type: string
        category:
          type: string
        capabilities:
          type: array
          items:
            type: string
        parameters_schema:
          type: object
        family_permissions_required:
          type: array
          items:
            type: string
        memory_access_level:
          type: string
          enum: [none, read, write, admin]
      required: [tool_id, name, description, category, capabilities]

    ToolExecutionResult:
      type: object
      properties:
        execution_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [success, partial_success, failure, advisory_only]
        result:
          type: object
          description: Tool-specific result data
        memory_impact:
          $ref: '#/components/schemas/MemoryImpact'
        family_notifications:
          type: array
          items:
            $ref: '#/components/schemas/FamilyNotification'
        execution_time:
          type: string
          format: date-time
        execution_duration_ms:
          type: integer
      required: [execution_id, status, execution_time]

    ScheduledExecution:
      type: object
      properties:
        execution_id:
          type: string
          format: uuid
        scheduled_time:
          type: string
          format: date-time
        tool_id:
          type: string
        parameters:
          type: object
        status:
          type: string
          enum: [scheduled, running, completed, failed, cancelled]

    # Status Schemas
    MemoryStatus:
      type: object
      properties:
        backbone_health:
          type: string
          enum: [healthy, degraded, unhealthy]
        sync_status:
          type: string
          enum: [synced, syncing, offline, conflict]
        storage_utilization:
          type: number
          minimum: 0
          maximum: 1
        last_sync:
          type: string
          format: date-time

    CognitiveStatus:
      type: object
      properties:
        attention_gate_health:
          type: string
          enum: [healthy, degraded, unhealthy]
        working_memory_load:
          type: number
          minimum: 0
          maximum: 1
        cognitive_processing_latency:
          type: integer
          description: Average processing latency in milliseconds
        decision_accuracy:
          type: number
          minimum: 0
          maximum: 1

    FamilyStatus:
      type: object
      properties:
        coordination_health:
          type: string
          enum: [healthy, degraded, unhealthy]
        relationship_context_accuracy:
          type: number
          minimum: 0
          maximum: 1
        family_sync_status:
          type: string
          enum: [synced, syncing, offline, conflict]
        privacy_compliance:
          type: boolean

    # Capability Schemas
    MemoryCapabilities:
      type: object
      properties:
        formation:
          type: boolean
        retrieval:
          type: boolean
        consolidation:
          type: boolean
        cross_device_sync:
          type: boolean
        family_memory_access:
          type: boolean
        memory_spaces_available:
          type: array
          items:
            type: string
            enum: [personal, selective, shared, extended, interfamily]

    CognitiveCapabilities:
      type: object
      properties:
        attention_processing:
          type: boolean
        working_memory_access:
          type: boolean
        hippocampal_processing:
          type: boolean
        global_workspace_access:
          type: boolean
        affect_processing:
          type: boolean
        decision_making:
          type: boolean

    FamilyCapabilities:
      type: object
      properties:
        relationship_understanding:
          type: boolean
        family_coordination:
          type: boolean
        consensus_building:
          type: boolean
        emergency_protocols:
          type: boolean
        child_safety_features:
          type: boolean
        privacy_controls:
          type: boolean

    ToolCapabilities:
      type: object
      properties:
        available_tools:
          type: array
          items:
            type: string
        execution_modes:
          type: array
          items:
            type: string
            enum: [immediate, scheduled, advisory_only]
        external_integrations:
          type: boolean
        family_tool_access:
          type: boolean

    # Impact & Notification Schemas
    MemoryImpact:
      type: object
      properties:
        memories_created:
          type: integer
        memories_updated:
          type: integer
        associations_formed:
          type: integer
        family_memories_affected:
          type: integer
        privacy_level_changes:
          type: array
          items:
            type: string

    FamilyNotification:
      type: object
      properties:
        notification_id:
          type: string
          format: uuid
        recipient_ids:
          type: array
          items:
            type: string
            format: uuid
        message:
          type: string
        priority:
          type: string
          enum: [low, normal, high, urgent]
        notification_type:
          type: string
          enum: [info, success, warning, error]

    # Error Schemas
    AgentError:
      type: object
      properties:
        error_code:
          type: string
        error_message:
          type: string
        error_context:
          type: object
        suggested_actions:
          type: array
          items:
            type: string
        family_impact:
          type: string
          enum: [none, minimal, moderate, significant]
      required: [error_code, error_message]

  responses:
    BadRequest:
      description: Invalid request parameters or malformed data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgentError'

    Unauthorized:
      description: Invalid or missing authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgentError'

    Forbidden:
      description: Insufficient permissions for requested operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgentError'

    NotFound:
      description: Requested resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgentError'

    UnprocessableEntity:
      description: Request data fails validation or business rules
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgentError'

    InternalServerError:
      description: Internal system error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgentError'
