{
    "$schema": "https://json-schema.org/draft-07/schema#",
    "$id": "https://schemas.memoryos.ai/storage/transaction_started.json",
    "title": "Storage Transaction Started Event Schema",
    "description": "Schema for storage transaction initiation events",
    "type": "object",
    "allOf": [
        {
            "$ref": "base_event.json"
        },
        {
            "type": "object",
            "required": [
                "transaction_id",
                "transaction_type",
                "stores_involved"
            ],
            "properties": {
                "event_type": {
                    "const": "STORAGE_TRANSACTION_STARTED"
                },
                "transaction_id": {
                    "type": "string",
                    "description": "Unique transaction identifier",
                    "pattern": "^(uow|single|mig|backup)_[a-z0-9]+_[0-9]{8}_[0-9]{6}$",
                    "examples": [
                        "uow_001_20250916_123456",
                        "single_episodic_20250916_123457",
                        "mig_v1_to_v2_20250916_123458"
                    ]
                },
                "transaction_type": {
                    "type": "string",
                    "description": "Type of transaction being started",
                    "enum": [
                        "unit_of_work",
                        "single_store",
                        "migration",
                        "backup",
                        "bulk_operation",
                        "maintenance"
                    ],
                    "examples": [
                        "unit_of_work",
                        "single_store"
                    ]
                },
                "stores_involved": {
                    "type": "array",
                    "description": "List of stores participating in transaction",
                    "minItems": 1,
                    "maxItems": 15,
                    "items": {
                        "$ref": "store_reference.json"
                    },
                    "examples": [
                        [
                            {
                                "store_name": "EpisodicStore",
                                "store_type": "postgresql"
                            },
                            {
                                "store_name": "SemanticStore",
                                "store_type": "postgresql"
                            }
                        ]
                    ]
                },
                "initiated_by": {
                    "type": "string",
                    "description": "User or service that initiated transaction",
                    "examples": [
                        "user_12345",
                        "system",
                        "migration_service",
                        "consolidation_service"
                    ]
                },
                "transaction_context": {
                    "type": "object",
                    "description": "Additional transaction context",
                    "properties": {
                        "operation_type": {
                            "type": "string",
                            "description": "High-level operation being performed",
                            "enum": [
                                "create_episode",
                                "update_episode",
                                "delete_episode",
                                "bulk_insert",
                                "schema_migration",
                                "data_migration",
                                "backup_operation",
                                "index_rebuild",
                                "data_cleanup"
                            ],
                            "examples": [
                                "create_episode",
                                "bulk_insert"
                            ]
                        },
                        "batch_size": {
                            "type": "integer",
                            "description": "Number of records in batch operation",
                            "minimum": 1,
                            "examples": [
                                100,
                                1000
                            ]
                        },
                        "priority": {
                            "type": "string",
                            "description": "Transaction priority level",
                            "enum": [
                                "low",
                                "normal",
                                "high",
                                "critical"
                            ],
                            "default": "normal",
                            "examples": [
                                "normal",
                                "high"
                            ]
                        },
                        "timeout_seconds": {
                            "type": "integer",
                            "description": "Transaction timeout in seconds",
                            "minimum": 1,
                            "maximum": 3600,
                            "default": 30,
                            "examples": [
                                30,
                                300
                            ]
                        },
                        "retry_count": {
                            "type": "integer",
                            "description": "Number of retry attempts allowed",
                            "minimum": 0,
                            "maximum": 10,
                            "default": 3,
                            "examples": [
                                3,
                                5
                            ]
                        }
                    },
                    "additionalProperties": true
                },
                "isolation_level": {
                    "type": "string",
                    "description": "Transaction isolation level",
                    "enum": [
                        "read_uncommitted",
                        "read_committed",
                        "repeatable_read",
                        "serializable"
                    ],
                    "default": "read_committed",
                    "examples": [
                        "read_committed",
                        "serializable"
                    ]
                },
                "expected_duration_ms": {
                    "type": "integer",
                    "description": "Expected transaction duration in milliseconds",
                    "minimum": 1,
                    "maximum": 300000,
                    "examples": [
                        50,
                        5000
                    ]
                },
                "consistency_requirements": {
                    "type": "object",
                    "description": "Consistency requirements for this transaction",
                    "properties": {
                        "strong_consistency": {
                            "type": "boolean",
                            "description": "Whether strong consistency is required",
                            "default": true
                        },
                        "cross_store_consistency": {
                            "type": "boolean",
                            "description": "Whether consistency across stores is required",
                            "default": true
                        },
                        "eventual_consistency_timeout_ms": {
                            "type": "integer",
                            "description": "Timeout for eventual consistency (if applicable)",
                            "minimum": 100,
                            "examples": [
                                5000,
                                10000
                            ]
                        }
                    }
                },
                "rollback_strategy": {
                    "type": "object",
                    "description": "Rollback strategy configuration",
                    "properties": {
                        "automatic_rollback": {
                            "type": "boolean",
                            "description": "Whether to automatically rollback on failure",
                            "default": true
                        },
                        "rollback_timeout_ms": {
                            "type": "integer",
                            "description": "Timeout for rollback operations",
                            "minimum": 1000,
                            "default": 10000,
                            "examples": [
                                10000,
                                30000
                            ]
                        },
                        "compensation_actions": {
                            "type": "array",
                            "description": "Compensation actions for rollback",
                            "items": {
                                "type": "string"
                            },
                            "examples": [
                                [
                                    "restore_backup",
                                    "notify_admin"
                                ]
                            ]
                        }
                    }
                }
            }
        }
    ],
    "examples": [
        {
            "event_id": "evt_stor001_20250916_123456",
            "timestamp": "2025-09-16T12:34:56.789Z",
            "correlation_id": "req_abc123def456",
            "source_service": "storage",
            "event_type": "STORAGE_TRANSACTION_STARTED",
            "event_version": "1.0.0",
            "transaction_id": "uow_001_20250916_123456",
            "transaction_type": "unit_of_work",
            "stores_involved": [
                {
                    "store_name": "EpisodicStore",
                    "store_type": "postgresql",
                    "store_instance": "episodic-primary"
                },
                {
                    "store_name": "SemanticStore",
                    "store_type": "postgresql",
                    "store_instance": "semantic-primary"
                },
                {
                    "store_name": "ReceiptsStore",
                    "store_type": "postgresql",
                    "store_instance": "receipts-primary"
                }
            ],
            "initiated_by": "user_12345",
            "transaction_context": {
                "operation_type": "create_episode",
                "priority": "normal",
                "timeout_seconds": 30,
                "retry_count": 3
            },
            "isolation_level": "read_committed",
            "expected_duration_ms": 50,
            "consistency_requirements": {
                "strong_consistency": true,
                "cross_store_consistency": true
            },
            "rollback_strategy": {
                "automatic_rollback": true,
                "rollback_timeout_ms": 10000
            },
            "metadata": {
                "environment": "production",
                "service_version": "2.1.0",
                "user_id": "user_12345"
            }
        },
        {
            "event_id": "evt_stor002_20250916_123500",
            "timestamp": "2025-09-16T12:35:00.123Z",
            "correlation_id": "req_bulk789xyz012",
            "source_service": "storage",
            "event_type": "STORAGE_TRANSACTION_STARTED",
            "event_version": "1.0.0",
            "transaction_id": "bulk_consolidation_20250916_123500",
            "transaction_type": "bulk_operation",
            "stores_involved": [
                {
                    "store_name": "ConsolidationStore",
                    "store_type": "postgresql",
                    "store_instance": "consolidation-primary"
                }
            ],
            "initiated_by": "consolidation_service",
            "transaction_context": {
                "operation_type": "bulk_insert",
                "batch_size": 1000,
                "priority": "high",
                "timeout_seconds": 300,
                "retry_count": 5
            },
            "isolation_level": "read_committed",
            "expected_duration_ms": 5000,
            "metadata": {
                "environment": "production",
                "service_version": "2.1.0"
            }
        }
    ]
}
