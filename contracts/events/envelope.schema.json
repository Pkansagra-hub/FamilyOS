{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://familyos.local/contracts/events/envelope.schema.json",
  "title": "FamilyOS Event Envelope",
  "description": "Canonical, versioned Event Envelope used by all modules and pipelines (P01â€“P20). Strict validation at bus ingress; non-breaking evolution via policy_version + adapters.",
  "type": "object",
  "additionalProperties": false,

  "required": [
    "schema_version",
    "id",
    "ts",
    "topic",
    "actor",
    "device",
    "space_id",
    "band",
    "policy_version",
    "qos",
    "hashes",
    "obligations",
    "payload",
    "signature"
  ],

  "properties": {
    "schema_version": {
      "type": "string",
      "description": "SemVer version of this envelope schema as emitted.",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-[0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*)?(?:\\+[0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*)?$"
    },

    "id": {
      "description": "Event identifier (UUID or ULID).",
      "oneOf": [
        { "type": "string", "format": "uuid" },
        { "type": "string", "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$", "$comment": "ULID Crockford base32" }
      ]
    },

    "ts": {
      "type": "string",
      "format": "date-time",
      "description": "Client/event creation timestamp (RFC3339)."
    },

    "ingest_ts": {
      "type": [ "string", "null" ],
      "format": "date-time",
      "description": "Server ingress timestamp (RFC3339)."
    },

    "topic": {
      "description": "Logical event name (minimal set and core topics) or name@semver.",
      "oneOf": [
        { "$ref": "#/$defs/EventTopicEnum" },
        { "type": "string", "pattern": "^[A-Z][A-Z0-9_]+@[0-9]+\\.[0-9]+$" }
      ]
    },

    "band": {
      "type": "string",
      "enum": ["GREEN", "AMBER", "RED", "BLACK"],
      "description": "Policy band for data sensitivity and handling."
    },

    "actor": { "$ref": "#/$defs/Actor" },

    "device": { "$ref": "#/$defs/Device" },

    "space_id": {
      "type": "string",
      "description": "Logical space routing key.",
      "pattern": "^(personal|selective|shared|extended|interfamily):[A-Za-z0-9_\\-\\.]+$"
    },

    "policy_version": {
      "type": "string",
      "description": "SemVer of policy bundle used to evaluate this event.",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:\\.(0|[1-9]\\d*))?$"
    },

    "abac": { "$ref": "#/$defs/ABAC" },

    "mls_group": {
      "type": "string",
      "description": "MLS group identifier for E2EE (required for AMBER/RED/BLACK).",
      "pattern": "^[A-Za-z0-9._:-]{3,64}$"
    },

    "qos": { "$ref": "#/$defs/QoS" },

    "trace": { "$ref": "#/$defs/Trace" },

    "obligations": {
      "type": "array",
      "description": "Policy obligations attached by gate/thalamus.",
      "items": { "$ref": "#/$defs/Obligation" },
      "uniqueItems": true,
      "default": []
    },

    "redaction_applied": {
      "type": "boolean",
      "description": "Whether redactor already applied PII masking to payload.",
      "default": false
    },

    "hashes": { "$ref": "#/$defs/Hashes" },

    "idempotency_key": {
      "type": "string",
      "description": "Client-supplied key for de-duplication.",
      "pattern": "^[A-Za-z0-9._:-]{8,64}$"
    },

    "payload": {
      "type": "object",
      "description": "Event-specific body (validated by topic-specific schema)."
    },

    "signature": { "$ref": "#/$defs/Signature" },

    "x_extensions": {
      "type": "object",
      "description": "Controlled extension area for experimental fields (must be namespaced).",
      "propertyNames": { "pattern": "^x_[A-Za-z0-9][A-Za-z0-9_]*$" },
      "additionalProperties": true,
      "default": {}
    }
  },

  "allOf": [
    {
      "if": { "properties": { "band": { "enum": ["AMBER", "RED", "BLACK"] } }, "required": ["band"] },
      "then": {
        "required": ["mls_group"],
        "anyOf": [
          { "properties": { "redaction_applied": { "const": true } }, "required": ["redaction_applied"] },
          { "properties": { "obligations": { "contains": { "const": "REDACT_PII" } } }, "required": ["obligations"] }
        ]
      }
    },
    {
      "if": { "properties": { "topic": { "const": "TOMBSTONE_APPLIED" } }, "required": ["topic"] },
      "then": {
        "properties": { "obligations": { "contains": { "const": "TOMBSTONE_ON_DELETE" } } },
        "required": ["obligations"]
      }
    },
    {
      "if": { "properties": { "topic": { "const": "DSAR_EXPORT" } }, "required": ["topic"] },
      "then": {
        "properties": { "obligations": { "contains": { "const": "AUDIT_ACCESS" } } },
        "required": ["obligations"]
      }
    },
    {
      "if": { "properties": { "topic": { "const": "SAFETY_BAND_CHANGED" } }, "required": ["topic"] },
      "then": {
        "properties": { "obligations": { "contains": { "const": "AUDIT_ACCESS" } } },
        "required": ["obligations"]
      }
    },
    {
      "if": { "properties": { "topic": { "const": "JOB_STATUS_CHANGED" } }, "required": ["topic"] },
      "then": {
        "properties": { "band": { "enum": ["GREEN", "AMBER"] } },
        "required": ["band"]
      }
    },
    {
      "if": { "properties": { "topic": { "const": "MEMORY_RECEIPT_CREATED" } }, "required": ["topic"] },
      "then": {
        "properties": { "obligations": { "contains": { "const": "AUDIT_ACCESS" } } },
        "required": ["obligations"]
      }
    }
  ],

  "$defs": {
    "EventTopicEnum": {
      "type": "string",
      "enum": [
        "HIPPO_ENCODE",
        "HIPPO_ENCODED",
        "WORKSPACE_BROADCAST",
        "SENSORY_FRAME",
        "RECALL_REQUEST",
        "RECALL_RESULT",
        "PROSPECTIVE_SCHEDULE",
        "REMIND_TICK",
        "ACTION_DECISION",
        "ACTION_EXECUTED",
        "LEARNING_TICK",
        "AFFECT_ANALYZE",
        "AFFECT_UPDATE",
        "DRIVE_TICK",
        "METACOG_REPORT",
        "BELIEF_UPDATE",
        "DSAR_EXPORT",
        "REINDEX_REQUEST",
        "ML_RUN_EVENT",
        "WORKFLOW_UPDATE",
        "PII_MINIMIZED",
        "TOMBSTONE_APPLIED",
        "SAFETY_ALERT",
        "JOB_STATUS_CHANGED",
        "MEMORY_RECEIPT_CREATED",
        "INTEGRATION_THING_CHANGED",
        "PRESENCE_DEVICE_CHANGED",
        "SAFETY_BAND_CHANGED",
        "PROSPECTIVE_REMIND_TICK",
        "TOMBSTONE_PROPAGATE",
        "USER_CREATED",
        "USER_ROLE_ASSIGNED",
        "USER_SPACE_ACCESS_GRANTED",
        "USER_STATUS_CHANGED"
      ]
    },

    "Actor": {
      "type": "object",
      "additionalProperties": false,
      "required": ["user_id", "caps"],
      "properties": {
        "user_id": { "type": "string", "format": "uuid" },
        "agent_id": { "type": "string", "pattern": "^[A-Za-z0-9._:-]{3,64}$" },
        "caps": {
          "type": "array",
          "items": { "type": "string", "enum": ["WRITE", "RECALL", "PROJECT", "SCHEDULE"] },
          "uniqueItems": true,
          "minItems": 1
        }
      }
    },

    "Device": {
      "type": "object",
      "additionalProperties": false,
      "required": ["device_id"],
      "properties": {
        "device_id": { "type": "string", "pattern": "^[A-Za-z0-9._:-]{3,64}$" },
        "platform": { "type": "string", "enum": ["ios", "android", "macos", "windows", "linux", "web", "edge"] },
        "app_version": { "type": "string", "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-[0-9A-Za-z-.]+)?$" },
        "locale": { "type": "string", "pattern": "^[A-Za-z]{2}(-[A-Za-z]{2})?$" }
      }
    },

    "ABAC": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "role": { "type": "string", "enum": ["parent", "child", "guest", "system", "service"] },
        "trust": { "type": "string", "enum": ["green", "amber", "red", "black"] },
        "geo_precision": { "type": "string", "enum": ["city", "region"] }
      }
    },

    "QoS": {
      "type": "object",
      "additionalProperties": false,
      "required": ["priority", "latency_budget_ms"],
      "properties": {
        "routing": { "type": "string", "enum": ["fast-path", "gate-path"], "default": "gate-path" },
        "priority": { "type": "integer", "minimum": 1, "maximum": 10 },
        "latency_budget_ms": { "type": "integer", "minimum": 1, "maximum": 1000 },
        "retries": { "type": "integer", "minimum": 0, "maximum": 3 },
        "deadline_ms": { "type": "integer", "minimum": 1 }
      }
    },

    "Trace": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "trace_id": { "type": "string", "pattern": "^[a-f0-9]{32}$" },
        "span_id": { "type": "string", "pattern": "^[a-f0-9]{16}$" },
        "parent_span_id": { "type": "string", "pattern": "^[a-f0-9]{16}$" },
        "sampled": { "type": "boolean", "default": true }
      }
    },

    "Obligation": {
      "type": "string",
      "enum": ["REDACT_PII", "AUDIT_ACCESS", "TOMBSTONE_ON_DELETE", "SYNC_REQUIRED"]
    },

    "Hashes": {
      "type": "object",
      "additionalProperties": false,
      "required": ["payload_sha256"],
      "properties": {
        "payload_sha256": { "type": "string", "pattern": "^[a-f0-9]{64}$" },
        "envelope_sha256": { "type": "string", "pattern": "^[a-f0-9]{64}$" },
        "prev_event_id": {
          "oneOf": [
            { "type": "string", "format": "uuid" },
            { "type": "string", "pattern": "^[0-7][0-9A-HJKMNP-TV-Z]{25}$" }
          ]
        },
        "merkle_root": { "type": "string", "pattern": "^[a-f0-9]{64}$" }
      }
    },

    "Signature": {
      "type": "object",
      "additionalProperties": false,
      "required": ["alg", "signature", "key_id"],
      "properties": {
        "alg": { "type": "string", "enum": ["ed25519", "ecdsa_p256"] },
        "key_id": { "type": "string", "pattern": "^[A-Za-z0-9._:-]{8,128}$" },
        "public_key": { "type": "string", "contentEncoding": "base64" },
        "signature": { "type": "string", "contentEncoding": "base64" }
      }
    }
  }
}
